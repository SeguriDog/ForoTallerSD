<?xml version="1.0" encoding="UTF-8" ?>
<testsuite errors="0" failures="6" hostname="Familiar-PC" name="forotallersd.AdminSpec" tests="8" time="4.872" timestamp="2015-10-22T01:42:33">
  <properties />
  <testcase classname="forotallersd.AdminSpec" name="test admin attribute level: null, field: null, valid: false " time="4.52">
    <failure message="Condition not satisfied:&#xa;&#xa;t_admin_level.errors.hasFieldErrors(&quot;level&quot;) == false&#xa;|             |      |                       |&#xa;|             |      true                    false&#xa;|             org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|             Field error in object &apos;forotallersd.Admin&apos; on field &apos;level&apos;: rejected value [null]; codes [forotallersd.Admin.level.nullable.error.forotallersd.Admin.level,forotallersd.Admin.level.nullable.error.level,forotallersd.Admin.level.nullable.error.java.lang.Integer,forotallersd.Admin.level.nullable.error,admin.level.nullable.error.forotallersd.Admin.level,admin.level.nullable.error.level,admin.level.nullable.error.java.lang.Integer,admin.level.nullable.error,forotallersd.Admin.level.nullable.forotallersd.Admin.level,forotallersd.Admin.level.nullable.level,forotallersd.Admin.level.nullable.java.lang.Integer,forotallersd.Admin.level.nullable,admin.level.nullable.forotallersd.Admin.level,admin.level.nullable.level,admin.level.nullable.java.lang.Integer,admin.level.nullable,nullable.forotallersd.Admin.level,nullable.level,nullable.java.lang.Integer,nullable]; arguments [level,class forotallersd.Admin]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_admin_level.errors.hasFieldErrors(&quot;level&quot;) == false
|             |      |                       |
|             |      true                    false
|             org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|             Field error in object &apos;forotallersd.Admin&apos; on field &apos;level&apos;: rejected value [null]; codes [forotallersd.Admin.level.nullable.error.forotallersd.Admin.level,forotallersd.Admin.level.nullable.error.level,forotallersd.Admin.level.nullable.error.java.lang.Integer,forotallersd.Admin.level.nullable.error,admin.level.nullable.error.forotallersd.Admin.level,admin.level.nullable.error.level,admin.level.nullable.error.java.lang.Integer,admin.level.nullable.error,forotallersd.Admin.level.nullable.forotallersd.Admin.level,forotallersd.Admin.level.nullable.level,forotallersd.Admin.level.nullable.java.lang.Integer,forotallersd.Admin.level.nullable,admin.level.nullable.forotallersd.Admin.level,admin.level.nullable.level,admin.level.nullable.java.lang.Integer,admin.level.nullable,nullable.forotallersd.Admin.level,nullable.level,nullable.java.lang.Integer,nullable]; arguments [level,class forotallersd.Admin]; default message [Property [{0}] of class [{1}] cannot be null]
forotallersd.User : (unsaved)

	at forotallersd.AdminSpec.Testing Domain Class Admin - level(AdminSpec.groovy:27)
</failure>
  </testcase>
  <testcase classname="forotallersd.AdminSpec" name="test admin attribute level: 0, field: minRange, valid: false " time="0.069">
    <failure message="Condition not satisfied:&#xa;&#xa;t_admin_level.errors.hasFieldErrors(&quot;level&quot;) == false&#xa;|             |      |                       |&#xa;|             |      true                    false&#xa;|             org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|             Field error in object &apos;forotallersd.Admin&apos; on field &apos;level&apos;: rejected value [0]; codes [forotallersd.Admin.level.range.error.forotallersd.Admin.level,forotallersd.Admin.level.range.error.level,forotallersd.Admin.level.range.error.java.lang.Integer,forotallersd.Admin.level.range.error,admin.level.range.error.forotallersd.Admin.level,admin.level.range.error.level,admin.level.range.error.java.lang.Integer,admin.level.range.error,forotallersd.Admin.level.range.toosmall.forotallersd.Admin.level,forotallersd.Admin.level.range.toosmall.level,forotallersd.Admin.level.range.toosmall.java.lang.Integer,forotallersd.Admin.level.range.toosmall,admin.level.range.toosmall.forotallersd.Admin.level,admin.level.range.toosmall.level,admin.level.range.toosmall.java.lang.Integer,admin.level.range.toosmall,range.toosmall.forotallersd.Admin.level,range.toosmall.level,range.toosmall.java.lang.Integer,range.toosmall]; arguments [level,class forotallersd.Admin,0,1,5]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_admin_level.errors.hasFieldErrors(&quot;level&quot;) == false
|             |      |                       |
|             |      true                    false
|             org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|             Field error in object &apos;forotallersd.Admin&apos; on field &apos;level&apos;: rejected value [0]; codes [forotallersd.Admin.level.range.error.forotallersd.Admin.level,forotallersd.Admin.level.range.error.level,forotallersd.Admin.level.range.error.java.lang.Integer,forotallersd.Admin.level.range.error,admin.level.range.error.forotallersd.Admin.level,admin.level.range.error.level,admin.level.range.error.java.lang.Integer,admin.level.range.error,forotallersd.Admin.level.range.toosmall.forotallersd.Admin.level,forotallersd.Admin.level.range.toosmall.level,forotallersd.Admin.level.range.toosmall.java.lang.Integer,forotallersd.Admin.level.range.toosmall,admin.level.range.toosmall.forotallersd.Admin.level,admin.level.range.toosmall.level,admin.level.range.toosmall.java.lang.Integer,admin.level.range.toosmall,range.toosmall.forotallersd.Admin.level,range.toosmall.level,range.toosmall.java.lang.Integer,range.toosmall]; arguments [level,class forotallersd.Admin,0,1,5]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]]
forotallersd.User : (unsaved)

	at forotallersd.AdminSpec.Testing Domain Class Admin - level(AdminSpec.groovy:27)
</failure>
  </testcase>
  <testcase classname="forotallersd.AdminSpec" name="test admin attribute level: 6, field: maxRange, valid: false " time="0.036">
    <failure message="Condition not satisfied:&#xa;&#xa;t_admin_level.errors.hasFieldErrors(&quot;level&quot;) == false&#xa;|             |      |                       |&#xa;|             |      true                    false&#xa;|             org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|             Field error in object &apos;forotallersd.Admin&apos; on field &apos;level&apos;: rejected value [6]; codes [forotallersd.Admin.level.range.error.forotallersd.Admin.level,forotallersd.Admin.level.range.error.level,forotallersd.Admin.level.range.error.java.lang.Integer,forotallersd.Admin.level.range.error,admin.level.range.error.forotallersd.Admin.level,admin.level.range.error.level,admin.level.range.error.java.lang.Integer,admin.level.range.error,forotallersd.Admin.level.range.toobig.forotallersd.Admin.level,forotallersd.Admin.level.range.toobig.level,forotallersd.Admin.level.range.toobig.java.lang.Integer,forotallersd.Admin.level.range.toobig,admin.level.range.toobig.forotallersd.Admin.level,admin.level.range.toobig.level,admin.level.range.toobig.java.lang.Integer,admin.level.range.toobig,range.toobig.forotallersd.Admin.level,range.toobig.level,range.toobig.java.lang.Integer,range.toobig]; arguments [level,class forotallersd.Admin,6,1,5]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_admin_level.errors.hasFieldErrors(&quot;level&quot;) == false
|             |      |                       |
|             |      true                    false
|             org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|             Field error in object &apos;forotallersd.Admin&apos; on field &apos;level&apos;: rejected value [6]; codes [forotallersd.Admin.level.range.error.forotallersd.Admin.level,forotallersd.Admin.level.range.error.level,forotallersd.Admin.level.range.error.java.lang.Integer,forotallersd.Admin.level.range.error,admin.level.range.error.forotallersd.Admin.level,admin.level.range.error.level,admin.level.range.error.java.lang.Integer,admin.level.range.error,forotallersd.Admin.level.range.toobig.forotallersd.Admin.level,forotallersd.Admin.level.range.toobig.level,forotallersd.Admin.level.range.toobig.java.lang.Integer,forotallersd.Admin.level.range.toobig,admin.level.range.toobig.forotallersd.Admin.level,admin.level.range.toobig.level,admin.level.range.toobig.java.lang.Integer,admin.level.range.toobig,range.toobig.forotallersd.Admin.level,range.toobig.level,range.toobig.java.lang.Integer,range.toobig]; arguments [level,class forotallersd.Admin,6,1,5]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]]
forotallersd.User : (unsaved)

	at forotallersd.AdminSpec.Testing Domain Class Admin - level(AdminSpec.groovy:27)
</failure>
  </testcase>
  <testcase classname="forotallersd.AdminSpec" name="test admin attribute level: 3, field: Range, valid: true " time="0.043" />
  <testcase classname="forotallersd.AdminSpec" name="test admin attribute rating: null, field: null, valid: false " time="0.035">
    <failure message="Condition not satisfied:&#xa;&#xa;t_admin_rating.errors.hasFieldErrors(&quot;rating&quot;) == false&#xa;|              |      |                        |&#xa;|              |      true                     false&#xa;|              org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|              Field error in object &apos;forotallersd.Admin&apos; on field &apos;rating&apos;: rejected value [null]; codes [forotallersd.Admin.rating.nullable.error.forotallersd.Admin.rating,forotallersd.Admin.rating.nullable.error.rating,forotallersd.Admin.rating.nullable.error.java.lang.Double,forotallersd.Admin.rating.nullable.error,admin.rating.nullable.error.forotallersd.Admin.rating,admin.rating.nullable.error.rating,admin.rating.nullable.error.java.lang.Double,admin.rating.nullable.error,forotallersd.Admin.rating.nullable.forotallersd.Admin.rating,forotallersd.Admin.rating.nullable.rating,forotallersd.Admin.rating.nullable.java.lang.Double,forotallersd.Admin.rating.nullable,admin.rating.nullable.forotallersd.Admin.rating,admin.rating.nullable.rating,admin.rating.nullable.java.lang.Double,admin.rating.nullable,nullable.forotallersd.Admin.rating,nullable.rating,nullable.java.lang.Double,nullable]; arguments [rating,class forotallersd.Admin]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_admin_rating.errors.hasFieldErrors(&quot;rating&quot;) == false
|              |      |                        |
|              |      true                     false
|              org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|              Field error in object &apos;forotallersd.Admin&apos; on field &apos;rating&apos;: rejected value [null]; codes [forotallersd.Admin.rating.nullable.error.forotallersd.Admin.rating,forotallersd.Admin.rating.nullable.error.rating,forotallersd.Admin.rating.nullable.error.java.lang.Double,forotallersd.Admin.rating.nullable.error,admin.rating.nullable.error.forotallersd.Admin.rating,admin.rating.nullable.error.rating,admin.rating.nullable.error.java.lang.Double,admin.rating.nullable.error,forotallersd.Admin.rating.nullable.forotallersd.Admin.rating,forotallersd.Admin.rating.nullable.rating,forotallersd.Admin.rating.nullable.java.lang.Double,forotallersd.Admin.rating.nullable,admin.rating.nullable.forotallersd.Admin.rating,admin.rating.nullable.rating,admin.rating.nullable.java.lang.Double,admin.rating.nullable,nullable.forotallersd.Admin.rating,nullable.rating,nullable.java.lang.Double,nullable]; arguments [rating,class forotallersd.Admin]; default message [Property [{0}] of class [{1}] cannot be null]
forotallersd.User : (unsaved)

	at forotallersd.AdminSpec.Testing Domain Class Admin - rating(AdminSpec.groovy:44)
</failure>
  </testcase>
  <testcase classname="forotallersd.AdminSpec" name="test admin attribute rating: -1, field: minRange, valid: false " time="0.03">
    <failure message="Condition not satisfied:&#xa;&#xa;t_admin_rating.errors.hasFieldErrors(&quot;rating&quot;) == false&#xa;|              |      |                        |&#xa;|              |      true                     false&#xa;|              org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|              Field error in object &apos;forotallersd.Admin&apos; on field &apos;rating&apos;: rejected value [-1.0]; codes [forotallersd.Admin.rating.range.error.forotallersd.Admin.rating,forotallersd.Admin.rating.range.error.rating,forotallersd.Admin.rating.range.error.java.lang.Double,forotallersd.Admin.rating.range.error,admin.rating.range.error.forotallersd.Admin.rating,admin.rating.range.error.rating,admin.rating.range.error.java.lang.Double,admin.rating.range.error,forotallersd.Admin.rating.range.toosmall.forotallersd.Admin.rating,forotallersd.Admin.rating.range.toosmall.rating,forotallersd.Admin.rating.range.toosmall.java.lang.Double,forotallersd.Admin.rating.range.toosmall,admin.rating.range.toosmall.forotallersd.Admin.rating,admin.rating.range.toosmall.rating,admin.rating.range.toosmall.java.lang.Double,admin.rating.range.toosmall,range.toosmall.forotallersd.Admin.rating,range.toosmall.rating,range.toosmall.java.lang.Double,range.toosmall]; arguments [rating,class forotallersd.Admin,-1.0,0,100]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_admin_rating.errors.hasFieldErrors(&quot;rating&quot;) == false
|              |      |                        |
|              |      true                     false
|              org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|              Field error in object &apos;forotallersd.Admin&apos; on field &apos;rating&apos;: rejected value [-1.0]; codes [forotallersd.Admin.rating.range.error.forotallersd.Admin.rating,forotallersd.Admin.rating.range.error.rating,forotallersd.Admin.rating.range.error.java.lang.Double,forotallersd.Admin.rating.range.error,admin.rating.range.error.forotallersd.Admin.rating,admin.rating.range.error.rating,admin.rating.range.error.java.lang.Double,admin.rating.range.error,forotallersd.Admin.rating.range.toosmall.forotallersd.Admin.rating,forotallersd.Admin.rating.range.toosmall.rating,forotallersd.Admin.rating.range.toosmall.java.lang.Double,forotallersd.Admin.rating.range.toosmall,admin.rating.range.toosmall.forotallersd.Admin.rating,admin.rating.range.toosmall.rating,admin.rating.range.toosmall.java.lang.Double,admin.rating.range.toosmall,range.toosmall.forotallersd.Admin.rating,range.toosmall.rating,range.toosmall.java.lang.Double,range.toosmall]; arguments [rating,class forotallersd.Admin,-1.0,0,100]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]]
forotallersd.User : (unsaved)

	at forotallersd.AdminSpec.Testing Domain Class Admin - rating(AdminSpec.groovy:44)
</failure>
  </testcase>
  <testcase classname="forotallersd.AdminSpec" name="test admin attribute rating: 101, field: maxRange, valid: false " time="0.029">
    <failure message="Condition not satisfied:&#xa;&#xa;t_admin_rating.errors.hasFieldErrors(&quot;rating&quot;) == false&#xa;|              |      |                        |&#xa;|              |      true                     false&#xa;|              org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|              Field error in object &apos;forotallersd.Admin&apos; on field &apos;rating&apos;: rejected value [101.0]; codes [forotallersd.Admin.rating.range.error.forotallersd.Admin.rating,forotallersd.Admin.rating.range.error.rating,forotallersd.Admin.rating.range.error.java.lang.Double,forotallersd.Admin.rating.range.error,admin.rating.range.error.forotallersd.Admin.rating,admin.rating.range.error.rating,admin.rating.range.error.java.lang.Double,admin.rating.range.error,forotallersd.Admin.rating.range.toobig.forotallersd.Admin.rating,forotallersd.Admin.rating.range.toobig.rating,forotallersd.Admin.rating.range.toobig.java.lang.Double,forotallersd.Admin.rating.range.toobig,admin.rating.range.toobig.forotallersd.Admin.rating,admin.rating.range.toobig.rating,admin.rating.range.toobig.java.lang.Double,admin.rating.range.toobig,range.toobig.forotallersd.Admin.rating,range.toobig.rating,range.toobig.java.lang.Double,range.toobig]; arguments [rating,class forotallersd.Admin,101.0,0,100]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_admin_rating.errors.hasFieldErrors(&quot;rating&quot;) == false
|              |      |                        |
|              |      true                     false
|              org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|              Field error in object &apos;forotallersd.Admin&apos; on field &apos;rating&apos;: rejected value [101.0]; codes [forotallersd.Admin.rating.range.error.forotallersd.Admin.rating,forotallersd.Admin.rating.range.error.rating,forotallersd.Admin.rating.range.error.java.lang.Double,forotallersd.Admin.rating.range.error,admin.rating.range.error.forotallersd.Admin.rating,admin.rating.range.error.rating,admin.rating.range.error.java.lang.Double,admin.rating.range.error,forotallersd.Admin.rating.range.toobig.forotallersd.Admin.rating,forotallersd.Admin.rating.range.toobig.rating,forotallersd.Admin.rating.range.toobig.java.lang.Double,forotallersd.Admin.rating.range.toobig,admin.rating.range.toobig.forotallersd.Admin.rating,admin.rating.range.toobig.rating,admin.rating.range.toobig.java.lang.Double,admin.rating.range.toobig,range.toobig.forotallersd.Admin.rating,range.toobig.rating,range.toobig.java.lang.Double,range.toobig]; arguments [rating,class forotallersd.Admin,101.0,0,100]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]]
forotallersd.User : (unsaved)

	at forotallersd.AdminSpec.Testing Domain Class Admin - rating(AdminSpec.groovy:44)
</failure>
  </testcase>
  <testcase classname="forotallersd.AdminSpec" name="test admin attribute rating: 56, field: Range, valid: true " time="0.03" />
  <system-out><![CDATA[--Output from test admin attribute level: null, field: null, valid: false --
--Output from test admin attribute level: 0, field: minRange, valid: false --
--Output from test admin attribute level: 6, field: maxRange, valid: false --
--Output from test admin attribute level: 3, field: Range, valid: true --
--Output from test admin attribute rating: null, field: null, valid: false --
--Output from test admin attribute rating: -1, field: minRange, valid: false --
--Output from test admin attribute rating: 101, field: maxRange, valid: false --
--Output from test admin attribute rating: 56, field: Range, valid: true --
]]></system-out>
  <system-err><![CDATA[--Output from test admin attribute level: null, field: null, valid: false --
--Output from test admin attribute level: 0, field: minRange, valid: false --
--Output from test admin attribute level: 6, field: maxRange, valid: false --
--Output from test admin attribute level: 3, field: Range, valid: true --
--Output from test admin attribute rating: null, field: null, valid: false --
--Output from test admin attribute rating: -1, field: minRange, valid: false --
--Output from test admin attribute rating: 101, field: maxRange, valid: false --
--Output from test admin attribute rating: 56, field: Range, valid: true --
]]></system-err>
</testsuite>
