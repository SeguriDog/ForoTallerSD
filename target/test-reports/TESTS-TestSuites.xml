<?xml version="1.0" encoding="UTF-8" ?>
<testsuites>
  <testsuite errors="0" failures="6" hostname="laptop-n4110" id="0" name="AdminSpec" package="forotallersd" tests="8" time="0.81" timestamp="2015-10-22T03:06:19">
      <properties />

      <testcase classname="forotallersd.AdminSpec" name="test admin attribute level: null, field: null, valid: false " time="0.266">
          <failure message="Condition not satisfied:&#xa;&#xa;t_admin_level.errors.hasFieldErrors(&quot;level&quot;) == false&#xa;|             |      |                       |&#xa;|             |      true                    false&#xa;|             org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|             Field error in object &apos;forotallersd.Admin&apos; on field &apos;level&apos;: rejected value [null]; codes [forotallersd.Admin.level.nullable.error.forotallersd.Admin.level,forotallersd.Admin.level.nullable.error.level,forotallersd.Admin.level.nullable.error.java.lang.Integer,forotallersd.Admin.level.nullable.error,admin.level.nullable.error.forotallersd.Admin.level,admin.level.nullable.error.level,admin.level.nullable.error.java.lang.Integer,admin.level.nullable.error,forotallersd.Admin.level.nullable.forotallersd.Admin.level,forotallersd.Admin.level.nullable.level,forotallersd.Admin.level.nullable.java.lang.Integer,forotallersd.Admin.level.nullable,admin.level.nullable.forotallersd.Admin.level,admin.level.nullable.level,admin.level.nullable.java.lang.Integer,admin.level.nullable,nullable.forotallersd.Admin.level,nullable.level,nullable.java.lang.Integer,nullable]; arguments [level,class forotallersd.Admin]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_admin_level.errors.hasFieldErrors(&quot;level&quot;) == false
|             |      |                       |
|             |      true                    false
|             org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|             Field error in object &apos;forotallersd.Admin&apos; on field &apos;level&apos;: rejected value [null]; codes [forotallersd.Admin.level.nullable.error.forotallersd.Admin.level,forotallersd.Admin.level.nullable.error.level,forotallersd.Admin.level.nullable.error.java.lang.Integer,forotallersd.Admin.level.nullable.error,admin.level.nullable.error.forotallersd.Admin.level,admin.level.nullable.error.level,admin.level.nullable.error.java.lang.Integer,admin.level.nullable.error,forotallersd.Admin.level.nullable.forotallersd.Admin.level,forotallersd.Admin.level.nullable.level,forotallersd.Admin.level.nullable.java.lang.Integer,forotallersd.Admin.level.nullable,admin.level.nullable.forotallersd.Admin.level,admin.level.nullable.level,admin.level.nullable.java.lang.Integer,admin.level.nullable,nullable.forotallersd.Admin.level,nullable.level,nullable.java.lang.Integer,nullable]; arguments [level,class forotallersd.Admin]; default message [Property [{0}] of class [{1}] cannot be null]
forotallersd.User : (unsaved)

	at forotallersd.AdminSpec.Testing Domain Class Admin - level(AdminSpec.groovy:27)
</failure>

      </testcase>

      <testcase classname="forotallersd.AdminSpec" name="test admin attribute level: 0, field: minRange, valid: false " time="0.054">
          <failure message="Condition not satisfied:&#xa;&#xa;t_admin_level.errors.hasFieldErrors(&quot;level&quot;) == false&#xa;|             |      |                       |&#xa;|             |      true                    false&#xa;|             org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|             Field error in object &apos;forotallersd.Admin&apos; on field &apos;level&apos;: rejected value [0]; codes [forotallersd.Admin.level.range.error.forotallersd.Admin.level,forotallersd.Admin.level.range.error.level,forotallersd.Admin.level.range.error.java.lang.Integer,forotallersd.Admin.level.range.error,admin.level.range.error.forotallersd.Admin.level,admin.level.range.error.level,admin.level.range.error.java.lang.Integer,admin.level.range.error,forotallersd.Admin.level.range.toosmall.forotallersd.Admin.level,forotallersd.Admin.level.range.toosmall.level,forotallersd.Admin.level.range.toosmall.java.lang.Integer,forotallersd.Admin.level.range.toosmall,admin.level.range.toosmall.forotallersd.Admin.level,admin.level.range.toosmall.level,admin.level.range.toosmall.java.lang.Integer,admin.level.range.toosmall,range.toosmall.forotallersd.Admin.level,range.toosmall.level,range.toosmall.java.lang.Integer,range.toosmall]; arguments [level,class forotallersd.Admin,0,1,5]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_admin_level.errors.hasFieldErrors(&quot;level&quot;) == false
|             |      |                       |
|             |      true                    false
|             org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|             Field error in object &apos;forotallersd.Admin&apos; on field &apos;level&apos;: rejected value [0]; codes [forotallersd.Admin.level.range.error.forotallersd.Admin.level,forotallersd.Admin.level.range.error.level,forotallersd.Admin.level.range.error.java.lang.Integer,forotallersd.Admin.level.range.error,admin.level.range.error.forotallersd.Admin.level,admin.level.range.error.level,admin.level.range.error.java.lang.Integer,admin.level.range.error,forotallersd.Admin.level.range.toosmall.forotallersd.Admin.level,forotallersd.Admin.level.range.toosmall.level,forotallersd.Admin.level.range.toosmall.java.lang.Integer,forotallersd.Admin.level.range.toosmall,admin.level.range.toosmall.forotallersd.Admin.level,admin.level.range.toosmall.level,admin.level.range.toosmall.java.lang.Integer,admin.level.range.toosmall,range.toosmall.forotallersd.Admin.level,range.toosmall.level,range.toosmall.java.lang.Integer,range.toosmall]; arguments [level,class forotallersd.Admin,0,1,5]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]]
forotallersd.User : (unsaved)

	at forotallersd.AdminSpec.Testing Domain Class Admin - level(AdminSpec.groovy:27)
</failure>

      </testcase>

      <testcase classname="forotallersd.AdminSpec" name="test admin attribute level: 6, field: maxRange, valid: false " time="0.061">
          <failure message="Condition not satisfied:&#xa;&#xa;t_admin_level.errors.hasFieldErrors(&quot;level&quot;) == false&#xa;|             |      |                       |&#xa;|             |      true                    false&#xa;|             org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|             Field error in object &apos;forotallersd.Admin&apos; on field &apos;level&apos;: rejected value [6]; codes [forotallersd.Admin.level.range.error.forotallersd.Admin.level,forotallersd.Admin.level.range.error.level,forotallersd.Admin.level.range.error.java.lang.Integer,forotallersd.Admin.level.range.error,admin.level.range.error.forotallersd.Admin.level,admin.level.range.error.level,admin.level.range.error.java.lang.Integer,admin.level.range.error,forotallersd.Admin.level.range.toobig.forotallersd.Admin.level,forotallersd.Admin.level.range.toobig.level,forotallersd.Admin.level.range.toobig.java.lang.Integer,forotallersd.Admin.level.range.toobig,admin.level.range.toobig.forotallersd.Admin.level,admin.level.range.toobig.level,admin.level.range.toobig.java.lang.Integer,admin.level.range.toobig,range.toobig.forotallersd.Admin.level,range.toobig.level,range.toobig.java.lang.Integer,range.toobig]; arguments [level,class forotallersd.Admin,6,1,5]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_admin_level.errors.hasFieldErrors(&quot;level&quot;) == false
|             |      |                       |
|             |      true                    false
|             org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|             Field error in object &apos;forotallersd.Admin&apos; on field &apos;level&apos;: rejected value [6]; codes [forotallersd.Admin.level.range.error.forotallersd.Admin.level,forotallersd.Admin.level.range.error.level,forotallersd.Admin.level.range.error.java.lang.Integer,forotallersd.Admin.level.range.error,admin.level.range.error.forotallersd.Admin.level,admin.level.range.error.level,admin.level.range.error.java.lang.Integer,admin.level.range.error,forotallersd.Admin.level.range.toobig.forotallersd.Admin.level,forotallersd.Admin.level.range.toobig.level,forotallersd.Admin.level.range.toobig.java.lang.Integer,forotallersd.Admin.level.range.toobig,admin.level.range.toobig.forotallersd.Admin.level,admin.level.range.toobig.level,admin.level.range.toobig.java.lang.Integer,admin.level.range.toobig,range.toobig.forotallersd.Admin.level,range.toobig.level,range.toobig.java.lang.Integer,range.toobig]; arguments [level,class forotallersd.Admin,6,1,5]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]]
forotallersd.User : (unsaved)

	at forotallersd.AdminSpec.Testing Domain Class Admin - level(AdminSpec.groovy:27)
</failure>

      </testcase>

      <testcase classname="forotallersd.AdminSpec" name="test admin attribute level: 3, field: Range, valid: true " time="0.099" />

      <testcase classname="forotallersd.AdminSpec" name="test admin attribute rating: null, field: null, valid: false " time="0.056">
          <failure message="Condition not satisfied:&#xa;&#xa;t_admin_rating.errors.hasFieldErrors(&quot;rating&quot;) == false&#xa;|              |      |                        |&#xa;|              |      true                     false&#xa;|              org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|              Field error in object &apos;forotallersd.Admin&apos; on field &apos;rating&apos;: rejected value [null]; codes [forotallersd.Admin.rating.nullable.error.forotallersd.Admin.rating,forotallersd.Admin.rating.nullable.error.rating,forotallersd.Admin.rating.nullable.error.java.lang.Double,forotallersd.Admin.rating.nullable.error,admin.rating.nullable.error.forotallersd.Admin.rating,admin.rating.nullable.error.rating,admin.rating.nullable.error.java.lang.Double,admin.rating.nullable.error,forotallersd.Admin.rating.nullable.forotallersd.Admin.rating,forotallersd.Admin.rating.nullable.rating,forotallersd.Admin.rating.nullable.java.lang.Double,forotallersd.Admin.rating.nullable,admin.rating.nullable.forotallersd.Admin.rating,admin.rating.nullable.rating,admin.rating.nullable.java.lang.Double,admin.rating.nullable,nullable.forotallersd.Admin.rating,nullable.rating,nullable.java.lang.Double,nullable]; arguments [rating,class forotallersd.Admin]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_admin_rating.errors.hasFieldErrors(&quot;rating&quot;) == false
|              |      |                        |
|              |      true                     false
|              org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|              Field error in object &apos;forotallersd.Admin&apos; on field &apos;rating&apos;: rejected value [null]; codes [forotallersd.Admin.rating.nullable.error.forotallersd.Admin.rating,forotallersd.Admin.rating.nullable.error.rating,forotallersd.Admin.rating.nullable.error.java.lang.Double,forotallersd.Admin.rating.nullable.error,admin.rating.nullable.error.forotallersd.Admin.rating,admin.rating.nullable.error.rating,admin.rating.nullable.error.java.lang.Double,admin.rating.nullable.error,forotallersd.Admin.rating.nullable.forotallersd.Admin.rating,forotallersd.Admin.rating.nullable.rating,forotallersd.Admin.rating.nullable.java.lang.Double,forotallersd.Admin.rating.nullable,admin.rating.nullable.forotallersd.Admin.rating,admin.rating.nullable.rating,admin.rating.nullable.java.lang.Double,admin.rating.nullable,nullable.forotallersd.Admin.rating,nullable.rating,nullable.java.lang.Double,nullable]; arguments [rating,class forotallersd.Admin]; default message [Property [{0}] of class [{1}] cannot be null]
forotallersd.User : (unsaved)

	at forotallersd.AdminSpec.Testing Domain Class Admin - rating(AdminSpec.groovy:44)
</failure>

      </testcase>

      <testcase classname="forotallersd.AdminSpec" name="test admin attribute rating: -1, field: minRange, valid: false " time="0.066">
          <failure message="Condition not satisfied:&#xa;&#xa;t_admin_rating.errors.hasFieldErrors(&quot;rating&quot;) == false&#xa;|              |      |                        |&#xa;|              |      true                     false&#xa;|              org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|              Field error in object &apos;forotallersd.Admin&apos; on field &apos;rating&apos;: rejected value [-1.0]; codes [forotallersd.Admin.rating.range.error.forotallersd.Admin.rating,forotallersd.Admin.rating.range.error.rating,forotallersd.Admin.rating.range.error.java.lang.Double,forotallersd.Admin.rating.range.error,admin.rating.range.error.forotallersd.Admin.rating,admin.rating.range.error.rating,admin.rating.range.error.java.lang.Double,admin.rating.range.error,forotallersd.Admin.rating.range.toosmall.forotallersd.Admin.rating,forotallersd.Admin.rating.range.toosmall.rating,forotallersd.Admin.rating.range.toosmall.java.lang.Double,forotallersd.Admin.rating.range.toosmall,admin.rating.range.toosmall.forotallersd.Admin.rating,admin.rating.range.toosmall.rating,admin.rating.range.toosmall.java.lang.Double,admin.rating.range.toosmall,range.toosmall.forotallersd.Admin.rating,range.toosmall.rating,range.toosmall.java.lang.Double,range.toosmall]; arguments [rating,class forotallersd.Admin,-1.0,0,100]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_admin_rating.errors.hasFieldErrors(&quot;rating&quot;) == false
|              |      |                        |
|              |      true                     false
|              org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|              Field error in object &apos;forotallersd.Admin&apos; on field &apos;rating&apos;: rejected value [-1.0]; codes [forotallersd.Admin.rating.range.error.forotallersd.Admin.rating,forotallersd.Admin.rating.range.error.rating,forotallersd.Admin.rating.range.error.java.lang.Double,forotallersd.Admin.rating.range.error,admin.rating.range.error.forotallersd.Admin.rating,admin.rating.range.error.rating,admin.rating.range.error.java.lang.Double,admin.rating.range.error,forotallersd.Admin.rating.range.toosmall.forotallersd.Admin.rating,forotallersd.Admin.rating.range.toosmall.rating,forotallersd.Admin.rating.range.toosmall.java.lang.Double,forotallersd.Admin.rating.range.toosmall,admin.rating.range.toosmall.forotallersd.Admin.rating,admin.rating.range.toosmall.rating,admin.rating.range.toosmall.java.lang.Double,admin.rating.range.toosmall,range.toosmall.forotallersd.Admin.rating,range.toosmall.rating,range.toosmall.java.lang.Double,range.toosmall]; arguments [rating,class forotallersd.Admin,-1.0,0,100]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]]
forotallersd.User : (unsaved)

	at forotallersd.AdminSpec.Testing Domain Class Admin - rating(AdminSpec.groovy:44)
</failure>

      </testcase>

      <testcase classname="forotallersd.AdminSpec" name="test admin attribute rating: 101, field: maxRange, valid: false " time="0.063">
          <failure message="Condition not satisfied:&#xa;&#xa;t_admin_rating.errors.hasFieldErrors(&quot;rating&quot;) == false&#xa;|              |      |                        |&#xa;|              |      true                     false&#xa;|              org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|              Field error in object &apos;forotallersd.Admin&apos; on field &apos;rating&apos;: rejected value [101.0]; codes [forotallersd.Admin.rating.range.error.forotallersd.Admin.rating,forotallersd.Admin.rating.range.error.rating,forotallersd.Admin.rating.range.error.java.lang.Double,forotallersd.Admin.rating.range.error,admin.rating.range.error.forotallersd.Admin.rating,admin.rating.range.error.rating,admin.rating.range.error.java.lang.Double,admin.rating.range.error,forotallersd.Admin.rating.range.toobig.forotallersd.Admin.rating,forotallersd.Admin.rating.range.toobig.rating,forotallersd.Admin.rating.range.toobig.java.lang.Double,forotallersd.Admin.rating.range.toobig,admin.rating.range.toobig.forotallersd.Admin.rating,admin.rating.range.toobig.rating,admin.rating.range.toobig.java.lang.Double,admin.rating.range.toobig,range.toobig.forotallersd.Admin.rating,range.toobig.rating,range.toobig.java.lang.Double,range.toobig]; arguments [rating,class forotallersd.Admin,101.0,0,100]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_admin_rating.errors.hasFieldErrors(&quot;rating&quot;) == false
|              |      |                        |
|              |      true                     false
|              org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|              Field error in object &apos;forotallersd.Admin&apos; on field &apos;rating&apos;: rejected value [101.0]; codes [forotallersd.Admin.rating.range.error.forotallersd.Admin.rating,forotallersd.Admin.rating.range.error.rating,forotallersd.Admin.rating.range.error.java.lang.Double,forotallersd.Admin.rating.range.error,admin.rating.range.error.forotallersd.Admin.rating,admin.rating.range.error.rating,admin.rating.range.error.java.lang.Double,admin.rating.range.error,forotallersd.Admin.rating.range.toobig.forotallersd.Admin.rating,forotallersd.Admin.rating.range.toobig.rating,forotallersd.Admin.rating.range.toobig.java.lang.Double,forotallersd.Admin.rating.range.toobig,admin.rating.range.toobig.forotallersd.Admin.rating,admin.rating.range.toobig.rating,admin.rating.range.toobig.java.lang.Double,admin.rating.range.toobig,range.toobig.forotallersd.Admin.rating,range.toobig.rating,range.toobig.java.lang.Double,range.toobig]; arguments [rating,class forotallersd.Admin,101.0,0,100]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]]
forotallersd.User : (unsaved)

	at forotallersd.AdminSpec.Testing Domain Class Admin - rating(AdminSpec.groovy:44)
</failure>

      </testcase>

      <testcase classname="forotallersd.AdminSpec" name="test admin attribute rating: 56, field: Range, valid: true " time="0.067" />

      <system-out><![CDATA[--Output from test admin attribute level: null, field: null, valid: false --
--Output from test admin attribute level: 0, field: minRange, valid: false --
--Output from test admin attribute level: 6, field: maxRange, valid: false --
--Output from test admin attribute level: 3, field: Range, valid: true --
--Output from test admin attribute rating: null, field: null, valid: false --
--Output from test admin attribute rating: -1, field: minRange, valid: false --
--Output from test admin attribute rating: 101, field: maxRange, valid: false --
--Output from test admin attribute rating: 56, field: Range, valid: true --
]]></system-out>

      <system-err><![CDATA[--Output from test admin attribute level: null, field: null, valid: false --
--Output from test admin attribute level: 0, field: minRange, valid: false --
--Output from test admin attribute level: 6, field: maxRange, valid: false --
--Output from test admin attribute level: 3, field: Range, valid: true --
--Output from test admin attribute rating: null, field: null, valid: false --
--Output from test admin attribute rating: -1, field: minRange, valid: false --
--Output from test admin attribute rating: 101, field: maxRange, valid: false --
--Output from test admin attribute rating: 56, field: Range, valid: true --
]]></system-err>

  </testsuite>
  <testsuite errors="0" failures="8" hostname="laptop-n4110" id="1" name="RegularSpec" package="forotallersd" tests="12" time="5.029" timestamp="2015-10-22T03:06:13">
      <properties />

      <testcase classname="forotallersd.RegularSpec" name="test regular attribute postViews: null, field: null, valid: false " time="4.327">
          <failure message="Condition not satisfied:&#xa;&#xa;t_regular_postViews.errors.hasFieldErrors(&quot;postViews&quot;) == false&#xa;|                   |      |                           |&#xa;|                   |      true                        false&#xa;|                   org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|                   Field error in object &apos;forotallersd.Regular&apos; on field &apos;postViews&apos;: rejected value [null]; codes [forotallersd.Regular.postViews.nullable.error.forotallersd.Regular.postViews,forotallersd.Regular.postViews.nullable.error.postViews,forotallersd.Regular.postViews.nullable.error.java.lang.Integer,forotallersd.Regular.postViews.nullable.error,regular.postViews.nullable.error.forotallersd.Regular.postViews,regular.postViews.nullable.error.postViews,regular.postViews.nullable.error.java.lang.Integer,regular.postViews.nullable.error,forotallersd.Regular.postViews.nullable.forotallersd.Regular.postViews,forotallersd.Regular.postViews.nullable.postViews,forotallersd.Regular.postViews.nullable.java.lang.Integer,forotallersd.Regular.postViews.nullable,regular.postViews.nullable.forotallersd.Regular.postViews,regular.postViews.nullable.postViews,regular.postViews.nullable.java.lang.Integer,regular.postViews.nullable,nullable.forotallersd.Regular.postViews,nullable.postViews,nullable.java.lang.Integer,nullable]; arguments [postViews,class forotallersd.Regular]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_regular_postViews.errors.hasFieldErrors(&quot;postViews&quot;) == false
|                   |      |                           |
|                   |      true                        false
|                   org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|                   Field error in object &apos;forotallersd.Regular&apos; on field &apos;postViews&apos;: rejected value [null]; codes [forotallersd.Regular.postViews.nullable.error.forotallersd.Regular.postViews,forotallersd.Regular.postViews.nullable.error.postViews,forotallersd.Regular.postViews.nullable.error.java.lang.Integer,forotallersd.Regular.postViews.nullable.error,regular.postViews.nullable.error.forotallersd.Regular.postViews,regular.postViews.nullable.error.postViews,regular.postViews.nullable.error.java.lang.Integer,regular.postViews.nullable.error,forotallersd.Regular.postViews.nullable.forotallersd.Regular.postViews,forotallersd.Regular.postViews.nullable.postViews,forotallersd.Regular.postViews.nullable.java.lang.Integer,forotallersd.Regular.postViews.nullable,regular.postViews.nullable.forotallersd.Regular.postViews,regular.postViews.nullable.postViews,regular.postViews.nullable.java.lang.Integer,regular.postViews.nullable,nullable.forotallersd.Regular.postViews,nullable.postViews,nullable.java.lang.Integer,nullable]; arguments [postViews,class forotallersd.Regular]; default message [Property [{0}] of class [{1}] cannot be null]
forotallersd.User : (unsaved)

	at forotallersd.RegularSpec.Testing Domain Class Regular - postViews(RegularSpec.groovy:27)
</failure>

      </testcase>

      <testcase classname="forotallersd.RegularSpec" name="test regular attribute postViews: -1, field: minValue, valid: false " time="0.073">
          <failure message="Condition not satisfied:&#xa;&#xa;t_regular_postViews.errors.hasFieldErrors(&quot;postViews&quot;) == false&#xa;|                   |      |                           |&#xa;|                   |      true                        false&#xa;|                   org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|                   Field error in object &apos;forotallersd.Regular&apos; on field &apos;postViews&apos;: rejected value [-1]; codes [forotallersd.Regular.postViews.min.error.forotallersd.Regular.postViews,forotallersd.Regular.postViews.min.error.postViews,forotallersd.Regular.postViews.min.error.java.lang.Integer,forotallersd.Regular.postViews.min.error,regular.postViews.min.error.forotallersd.Regular.postViews,regular.postViews.min.error.postViews,regular.postViews.min.error.java.lang.Integer,regular.postViews.min.error,forotallersd.Regular.postViews.min.notmet.forotallersd.Regular.postViews,forotallersd.Regular.postViews.min.notmet.postViews,forotallersd.Regular.postViews.min.notmet.java.lang.Integer,forotallersd.Regular.postViews.min.notmet,regular.postViews.min.notmet.forotallersd.Regular.postViews,regular.postViews.min.notmet.postViews,regular.postViews.min.notmet.java.lang.Integer,regular.postViews.min.notmet,min.notmet.forotallersd.Regular.postViews,min.notmet.postViews,min.notmet.java.lang.Integer,min.notmet]; arguments [postViews,class forotallersd.Regular,-1,0]; default message [Property [{0}] of class [{1}] with value [{2}] is less than minimum value [{3}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_regular_postViews.errors.hasFieldErrors(&quot;postViews&quot;) == false
|                   |      |                           |
|                   |      true                        false
|                   org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|                   Field error in object &apos;forotallersd.Regular&apos; on field &apos;postViews&apos;: rejected value [-1]; codes [forotallersd.Regular.postViews.min.error.forotallersd.Regular.postViews,forotallersd.Regular.postViews.min.error.postViews,forotallersd.Regular.postViews.min.error.java.lang.Integer,forotallersd.Regular.postViews.min.error,regular.postViews.min.error.forotallersd.Regular.postViews,regular.postViews.min.error.postViews,regular.postViews.min.error.java.lang.Integer,regular.postViews.min.error,forotallersd.Regular.postViews.min.notmet.forotallersd.Regular.postViews,forotallersd.Regular.postViews.min.notmet.postViews,forotallersd.Regular.postViews.min.notmet.java.lang.Integer,forotallersd.Regular.postViews.min.notmet,regular.postViews.min.notmet.forotallersd.Regular.postViews,regular.postViews.min.notmet.postViews,regular.postViews.min.notmet.java.lang.Integer,regular.postViews.min.notmet,min.notmet.forotallersd.Regular.postViews,min.notmet.postViews,min.notmet.java.lang.Integer,min.notmet]; arguments [postViews,class forotallersd.Regular,-1,0]; default message [Property [{0}] of class [{1}] with value [{2}] is less than minimum value [{3}]]
forotallersd.User : (unsaved)

	at forotallersd.RegularSpec.Testing Domain Class Regular - postViews(RegularSpec.groovy:27)
</failure>

      </testcase>

      <testcase classname="forotallersd.RegularSpec" name="test regular attribute postViews: 0, field: Value, valid: true " time="0.059" />

      <testcase classname="forotallersd.RegularSpec" name="test regular attribute postViews: 20, field: Value, valid: true " time="0.041" />

      <testcase classname="forotallersd.RegularSpec" name="test regular attribute strikesNumber: null, field: null, valid: false " time="0.043">
          <failure message="Condition not satisfied:&#xa;&#xa;t_regular_strikesNumber.errors.hasFieldErrors(&quot;strikesNumber&quot;) == false&#xa;|                       |      |                               |&#xa;|                       |      true                            false&#xa;|                       org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|                       Field error in object &apos;forotallersd.Regular&apos; on field &apos;strikesNumber&apos;: rejected value [null]; codes [forotallersd.Regular.strikesNumber.nullable.error.forotallersd.Regular.strikesNumber,forotallersd.Regular.strikesNumber.nullable.error.strikesNumber,forotallersd.Regular.strikesNumber.nullable.error.java.lang.Integer,forotallersd.Regular.strikesNumber.nullable.error,regular.strikesNumber.nullable.error.forotallersd.Regular.strikesNumber,regular.strikesNumber.nullable.error.strikesNumber,regular.strikesNumber.nullable.error.java.lang.Integer,regular.strikesNumber.nullable.error,forotallersd.Regular.strikesNumber.nullable.forotallersd.Regular.strikesNumber,forotallersd.Regular.strikesNumber.nullable.strikesNumber,forotallersd.Regular.strikesNumber.nullable.java.lang.Integer,forotallersd.Regular.strikesNumber.nullable,regular.strikesNumber.nullable.forotallersd.Regular.strikesNumber,regular.strikesNumber.nullable.strikesNumber,regular.strikesNumber.nullable.java.lang.Integer,regular.strikesNumber.nullable,nullable.forotallersd.Regular.strikesNumber,nullable.strikesNumber,nullable.java.lang.Integer,nullable]; arguments [strikesNumber,class forotallersd.Regular]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_regular_strikesNumber.errors.hasFieldErrors(&quot;strikesNumber&quot;) == false
|                       |      |                               |
|                       |      true                            false
|                       org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|                       Field error in object &apos;forotallersd.Regular&apos; on field &apos;strikesNumber&apos;: rejected value [null]; codes [forotallersd.Regular.strikesNumber.nullable.error.forotallersd.Regular.strikesNumber,forotallersd.Regular.strikesNumber.nullable.error.strikesNumber,forotallersd.Regular.strikesNumber.nullable.error.java.lang.Integer,forotallersd.Regular.strikesNumber.nullable.error,regular.strikesNumber.nullable.error.forotallersd.Regular.strikesNumber,regular.strikesNumber.nullable.error.strikesNumber,regular.strikesNumber.nullable.error.java.lang.Integer,regular.strikesNumber.nullable.error,forotallersd.Regular.strikesNumber.nullable.forotallersd.Regular.strikesNumber,forotallersd.Regular.strikesNumber.nullable.strikesNumber,forotallersd.Regular.strikesNumber.nullable.java.lang.Integer,forotallersd.Regular.strikesNumber.nullable,regular.strikesNumber.nullable.forotallersd.Regular.strikesNumber,regular.strikesNumber.nullable.strikesNumber,regular.strikesNumber.nullable.java.lang.Integer,regular.strikesNumber.nullable,nullable.forotallersd.Regular.strikesNumber,nullable.strikesNumber,nullable.java.lang.Integer,nullable]; arguments [strikesNumber,class forotallersd.Regular]; default message [Property [{0}] of class [{1}] cannot be null]
forotallersd.User : (unsaved)

	at forotallersd.RegularSpec.Testing Domain Class Regular - strikesNumber(RegularSpec.groovy:44)
</failure>

      </testcase>

      <testcase classname="forotallersd.RegularSpec" name="test regular attribute strikesNumber: -1, field: minValue, valid: false " time="0.042">
          <failure message="Condition not satisfied:&#xa;&#xa;t_regular_strikesNumber.errors.hasFieldErrors(&quot;strikesNumber&quot;) == false&#xa;|                       |      |                               |&#xa;|                       |      true                            false&#xa;|                       org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|                       Field error in object &apos;forotallersd.Regular&apos; on field &apos;strikesNumber&apos;: rejected value [-1]; codes [forotallersd.Regular.strikesNumber.range.error.forotallersd.Regular.strikesNumber,forotallersd.Regular.strikesNumber.range.error.strikesNumber,forotallersd.Regular.strikesNumber.range.error.java.lang.Integer,forotallersd.Regular.strikesNumber.range.error,regular.strikesNumber.range.error.forotallersd.Regular.strikesNumber,regular.strikesNumber.range.error.strikesNumber,regular.strikesNumber.range.error.java.lang.Integer,regular.strikesNumber.range.error,forotallersd.Regular.strikesNumber.range.toosmall.forotallersd.Regular.strikesNumber,forotallersd.Regular.strikesNumber.range.toosmall.strikesNumber,forotallersd.Regular.strikesNumber.range.toosmall.java.lang.Integer,forotallersd.Regular.strikesNumber.range.toosmall,regular.strikesNumber.range.toosmall.forotallersd.Regular.strikesNumber,regular.strikesNumber.range.toosmall.strikesNumber,regular.strikesNumber.range.toosmall.java.lang.Integer,regular.strikesNumber.range.toosmall,range.toosmall.forotallersd.Regular.strikesNumber,range.toosmall.strikesNumber,range.toosmall.java.lang.Integer,range.toosmall]; arguments [strikesNumber,class forotallersd.Regular,-1,0,3]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_regular_strikesNumber.errors.hasFieldErrors(&quot;strikesNumber&quot;) == false
|                       |      |                               |
|                       |      true                            false
|                       org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|                       Field error in object &apos;forotallersd.Regular&apos; on field &apos;strikesNumber&apos;: rejected value [-1]; codes [forotallersd.Regular.strikesNumber.range.error.forotallersd.Regular.strikesNumber,forotallersd.Regular.strikesNumber.range.error.strikesNumber,forotallersd.Regular.strikesNumber.range.error.java.lang.Integer,forotallersd.Regular.strikesNumber.range.error,regular.strikesNumber.range.error.forotallersd.Regular.strikesNumber,regular.strikesNumber.range.error.strikesNumber,regular.strikesNumber.range.error.java.lang.Integer,regular.strikesNumber.range.error,forotallersd.Regular.strikesNumber.range.toosmall.forotallersd.Regular.strikesNumber,forotallersd.Regular.strikesNumber.range.toosmall.strikesNumber,forotallersd.Regular.strikesNumber.range.toosmall.java.lang.Integer,forotallersd.Regular.strikesNumber.range.toosmall,regular.strikesNumber.range.toosmall.forotallersd.Regular.strikesNumber,regular.strikesNumber.range.toosmall.strikesNumber,regular.strikesNumber.range.toosmall.java.lang.Integer,regular.strikesNumber.range.toosmall,range.toosmall.forotallersd.Regular.strikesNumber,range.toosmall.strikesNumber,range.toosmall.java.lang.Integer,range.toosmall]; arguments [strikesNumber,class forotallersd.Regular,-1,0,3]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]]
forotallersd.User : (unsaved)

	at forotallersd.RegularSpec.Testing Domain Class Regular - strikesNumber(RegularSpec.groovy:44)
</failure>

      </testcase>

      <testcase classname="forotallersd.RegularSpec" name="test regular attribute strikesNumber: 4, field: maxValue, valid: false " time="0.055">
          <failure message="Condition not satisfied:&#xa;&#xa;t_regular_strikesNumber.errors.hasFieldErrors(&quot;strikesNumber&quot;) == false&#xa;|                       |      |                               |&#xa;|                       |      true                            false&#xa;|                       org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|                       Field error in object &apos;forotallersd.Regular&apos; on field &apos;strikesNumber&apos;: rejected value [4]; codes [forotallersd.Regular.strikesNumber.range.error.forotallersd.Regular.strikesNumber,forotallersd.Regular.strikesNumber.range.error.strikesNumber,forotallersd.Regular.strikesNumber.range.error.java.lang.Integer,forotallersd.Regular.strikesNumber.range.error,regular.strikesNumber.range.error.forotallersd.Regular.strikesNumber,regular.strikesNumber.range.error.strikesNumber,regular.strikesNumber.range.error.java.lang.Integer,regular.strikesNumber.range.error,forotallersd.Regular.strikesNumber.range.toobig.forotallersd.Regular.strikesNumber,forotallersd.Regular.strikesNumber.range.toobig.strikesNumber,forotallersd.Regular.strikesNumber.range.toobig.java.lang.Integer,forotallersd.Regular.strikesNumber.range.toobig,regular.strikesNumber.range.toobig.forotallersd.Regular.strikesNumber,regular.strikesNumber.range.toobig.strikesNumber,regular.strikesNumber.range.toobig.java.lang.Integer,regular.strikesNumber.range.toobig,range.toobig.forotallersd.Regular.strikesNumber,range.toobig.strikesNumber,range.toobig.java.lang.Integer,range.toobig]; arguments [strikesNumber,class forotallersd.Regular,4,0,3]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_regular_strikesNumber.errors.hasFieldErrors(&quot;strikesNumber&quot;) == false
|                       |      |                               |
|                       |      true                            false
|                       org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|                       Field error in object &apos;forotallersd.Regular&apos; on field &apos;strikesNumber&apos;: rejected value [4]; codes [forotallersd.Regular.strikesNumber.range.error.forotallersd.Regular.strikesNumber,forotallersd.Regular.strikesNumber.range.error.strikesNumber,forotallersd.Regular.strikesNumber.range.error.java.lang.Integer,forotallersd.Regular.strikesNumber.range.error,regular.strikesNumber.range.error.forotallersd.Regular.strikesNumber,regular.strikesNumber.range.error.strikesNumber,regular.strikesNumber.range.error.java.lang.Integer,regular.strikesNumber.range.error,forotallersd.Regular.strikesNumber.range.toobig.forotallersd.Regular.strikesNumber,forotallersd.Regular.strikesNumber.range.toobig.strikesNumber,forotallersd.Regular.strikesNumber.range.toobig.java.lang.Integer,forotallersd.Regular.strikesNumber.range.toobig,regular.strikesNumber.range.toobig.forotallersd.Regular.strikesNumber,regular.strikesNumber.range.toobig.strikesNumber,regular.strikesNumber.range.toobig.java.lang.Integer,regular.strikesNumber.range.toobig,range.toobig.forotallersd.Regular.strikesNumber,range.toobig.strikesNumber,range.toobig.java.lang.Integer,range.toobig]; arguments [strikesNumber,class forotallersd.Regular,4,0,3]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]]
forotallersd.User : (unsaved)

	at forotallersd.RegularSpec.Testing Domain Class Regular - strikesNumber(RegularSpec.groovy:44)
</failure>

      </testcase>

      <testcase classname="forotallersd.RegularSpec" name="test regular attribute strikesNumber: 2, field: Value, valid: true " time="0.052" />

      <testcase classname="forotallersd.RegularSpec" name="test regular attribute starsNumber: null, field: null, valid: false " time="0.043">
          <failure message="Condition not satisfied:&#xa;&#xa;t_regular_starsNumber.errors.hasFieldErrors(&quot;starsNumber&quot;) == false&#xa;|                     |      |                             |&#xa;|                     |      true                          false&#xa;|                     org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|                     Field error in object &apos;forotallersd.Regular&apos; on field &apos;starsNumber&apos;: rejected value [null]; codes [forotallersd.Regular.starsNumber.nullable.error.forotallersd.Regular.starsNumber,forotallersd.Regular.starsNumber.nullable.error.starsNumber,forotallersd.Regular.starsNumber.nullable.error.java.lang.Integer,forotallersd.Regular.starsNumber.nullable.error,regular.starsNumber.nullable.error.forotallersd.Regular.starsNumber,regular.starsNumber.nullable.error.starsNumber,regular.starsNumber.nullable.error.java.lang.Integer,regular.starsNumber.nullable.error,forotallersd.Regular.starsNumber.nullable.forotallersd.Regular.starsNumber,forotallersd.Regular.starsNumber.nullable.starsNumber,forotallersd.Regular.starsNumber.nullable.java.lang.Integer,forotallersd.Regular.starsNumber.nullable,regular.starsNumber.nullable.forotallersd.Regular.starsNumber,regular.starsNumber.nullable.starsNumber,regular.starsNumber.nullable.java.lang.Integer,regular.starsNumber.nullable,nullable.forotallersd.Regular.starsNumber,nullable.starsNumber,nullable.java.lang.Integer,nullable]; arguments [starsNumber,class forotallersd.Regular]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_regular_starsNumber.errors.hasFieldErrors(&quot;starsNumber&quot;) == false
|                     |      |                             |
|                     |      true                          false
|                     org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|                     Field error in object &apos;forotallersd.Regular&apos; on field &apos;starsNumber&apos;: rejected value [null]; codes [forotallersd.Regular.starsNumber.nullable.error.forotallersd.Regular.starsNumber,forotallersd.Regular.starsNumber.nullable.error.starsNumber,forotallersd.Regular.starsNumber.nullable.error.java.lang.Integer,forotallersd.Regular.starsNumber.nullable.error,regular.starsNumber.nullable.error.forotallersd.Regular.starsNumber,regular.starsNumber.nullable.error.starsNumber,regular.starsNumber.nullable.error.java.lang.Integer,regular.starsNumber.nullable.error,forotallersd.Regular.starsNumber.nullable.forotallersd.Regular.starsNumber,forotallersd.Regular.starsNumber.nullable.starsNumber,forotallersd.Regular.starsNumber.nullable.java.lang.Integer,forotallersd.Regular.starsNumber.nullable,regular.starsNumber.nullable.forotallersd.Regular.starsNumber,regular.starsNumber.nullable.starsNumber,regular.starsNumber.nullable.java.lang.Integer,regular.starsNumber.nullable,nullable.forotallersd.Regular.starsNumber,nullable.starsNumber,nullable.java.lang.Integer,nullable]; arguments [starsNumber,class forotallersd.Regular]; default message [Property [{0}] of class [{1}] cannot be null]
forotallersd.User : (unsaved)

	at forotallersd.RegularSpec.Testing Domain Class Regular - starsNumber(RegularSpec.groovy:61)
</failure>

      </testcase>

      <testcase classname="forotallersd.RegularSpec" name="test regular attribute starsNumber: -1, field: minValue, valid: false " time="0.053">
          <failure message="Condition not satisfied:&#xa;&#xa;t_regular_starsNumber.errors.hasFieldErrors(&quot;starsNumber&quot;) == false&#xa;|                     |      |                             |&#xa;|                     |      true                          false&#xa;|                     org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|                     Field error in object &apos;forotallersd.Regular&apos; on field &apos;starsNumber&apos;: rejected value [-1]; codes [forotallersd.Regular.starsNumber.range.error.forotallersd.Regular.starsNumber,forotallersd.Regular.starsNumber.range.error.starsNumber,forotallersd.Regular.starsNumber.range.error.java.lang.Integer,forotallersd.Regular.starsNumber.range.error,regular.starsNumber.range.error.forotallersd.Regular.starsNumber,regular.starsNumber.range.error.starsNumber,regular.starsNumber.range.error.java.lang.Integer,regular.starsNumber.range.error,forotallersd.Regular.starsNumber.range.toosmall.forotallersd.Regular.starsNumber,forotallersd.Regular.starsNumber.range.toosmall.starsNumber,forotallersd.Regular.starsNumber.range.toosmall.java.lang.Integer,forotallersd.Regular.starsNumber.range.toosmall,regular.starsNumber.range.toosmall.forotallersd.Regular.starsNumber,regular.starsNumber.range.toosmall.starsNumber,regular.starsNumber.range.toosmall.java.lang.Integer,regular.starsNumber.range.toosmall,range.toosmall.forotallersd.Regular.starsNumber,range.toosmall.starsNumber,range.toosmall.java.lang.Integer,range.toosmall]; arguments [starsNumber,class forotallersd.Regular,-1,0,5]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_regular_starsNumber.errors.hasFieldErrors(&quot;starsNumber&quot;) == false
|                     |      |                             |
|                     |      true                          false
|                     org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|                     Field error in object &apos;forotallersd.Regular&apos; on field &apos;starsNumber&apos;: rejected value [-1]; codes [forotallersd.Regular.starsNumber.range.error.forotallersd.Regular.starsNumber,forotallersd.Regular.starsNumber.range.error.starsNumber,forotallersd.Regular.starsNumber.range.error.java.lang.Integer,forotallersd.Regular.starsNumber.range.error,regular.starsNumber.range.error.forotallersd.Regular.starsNumber,regular.starsNumber.range.error.starsNumber,regular.starsNumber.range.error.java.lang.Integer,regular.starsNumber.range.error,forotallersd.Regular.starsNumber.range.toosmall.forotallersd.Regular.starsNumber,forotallersd.Regular.starsNumber.range.toosmall.starsNumber,forotallersd.Regular.starsNumber.range.toosmall.java.lang.Integer,forotallersd.Regular.starsNumber.range.toosmall,regular.starsNumber.range.toosmall.forotallersd.Regular.starsNumber,regular.starsNumber.range.toosmall.starsNumber,regular.starsNumber.range.toosmall.java.lang.Integer,regular.starsNumber.range.toosmall,range.toosmall.forotallersd.Regular.starsNumber,range.toosmall.starsNumber,range.toosmall.java.lang.Integer,range.toosmall]; arguments [starsNumber,class forotallersd.Regular,-1,0,5]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]]
forotallersd.User : (unsaved)

	at forotallersd.RegularSpec.Testing Domain Class Regular - starsNumber(RegularSpec.groovy:61)
</failure>

      </testcase>

      <testcase classname="forotallersd.RegularSpec" name="test regular attribute starsNumber: 6, field: maxValue, valid: false " time="0.079">
          <failure message="Condition not satisfied:&#xa;&#xa;t_regular_starsNumber.errors.hasFieldErrors(&quot;starsNumber&quot;) == false&#xa;|                     |      |                             |&#xa;|                     |      true                          false&#xa;|                     org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|                     Field error in object &apos;forotallersd.Regular&apos; on field &apos;starsNumber&apos;: rejected value [6]; codes [forotallersd.Regular.starsNumber.range.error.forotallersd.Regular.starsNumber,forotallersd.Regular.starsNumber.range.error.starsNumber,forotallersd.Regular.starsNumber.range.error.java.lang.Integer,forotallersd.Regular.starsNumber.range.error,regular.starsNumber.range.error.forotallersd.Regular.starsNumber,regular.starsNumber.range.error.starsNumber,regular.starsNumber.range.error.java.lang.Integer,regular.starsNumber.range.error,forotallersd.Regular.starsNumber.range.toobig.forotallersd.Regular.starsNumber,forotallersd.Regular.starsNumber.range.toobig.starsNumber,forotallersd.Regular.starsNumber.range.toobig.java.lang.Integer,forotallersd.Regular.starsNumber.range.toobig,regular.starsNumber.range.toobig.forotallersd.Regular.starsNumber,regular.starsNumber.range.toobig.starsNumber,regular.starsNumber.range.toobig.java.lang.Integer,regular.starsNumber.range.toobig,range.toobig.forotallersd.Regular.starsNumber,range.toobig.starsNumber,range.toobig.java.lang.Integer,range.toobig]; arguments [starsNumber,class forotallersd.Regular,6,0,5]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_regular_starsNumber.errors.hasFieldErrors(&quot;starsNumber&quot;) == false
|                     |      |                             |
|                     |      true                          false
|                     org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|                     Field error in object &apos;forotallersd.Regular&apos; on field &apos;starsNumber&apos;: rejected value [6]; codes [forotallersd.Regular.starsNumber.range.error.forotallersd.Regular.starsNumber,forotallersd.Regular.starsNumber.range.error.starsNumber,forotallersd.Regular.starsNumber.range.error.java.lang.Integer,forotallersd.Regular.starsNumber.range.error,regular.starsNumber.range.error.forotallersd.Regular.starsNumber,regular.starsNumber.range.error.starsNumber,regular.starsNumber.range.error.java.lang.Integer,regular.starsNumber.range.error,forotallersd.Regular.starsNumber.range.toobig.forotallersd.Regular.starsNumber,forotallersd.Regular.starsNumber.range.toobig.starsNumber,forotallersd.Regular.starsNumber.range.toobig.java.lang.Integer,forotallersd.Regular.starsNumber.range.toobig,regular.starsNumber.range.toobig.forotallersd.Regular.starsNumber,regular.starsNumber.range.toobig.starsNumber,regular.starsNumber.range.toobig.java.lang.Integer,regular.starsNumber.range.toobig,range.toobig.forotallersd.Regular.starsNumber,range.toobig.starsNumber,range.toobig.java.lang.Integer,range.toobig]; arguments [starsNumber,class forotallersd.Regular,6,0,5]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]]
forotallersd.User : (unsaved)

	at forotallersd.RegularSpec.Testing Domain Class Regular - starsNumber(RegularSpec.groovy:61)
</failure>

      </testcase>

      <testcase classname="forotallersd.RegularSpec" name="test regular attribute starsNumber: 4, field: Value, valid: true " time="0.06" />

      <system-out><![CDATA[--Output from test regular attribute postViews: null, field: null, valid: false --
--Output from test regular attribute postViews: -1, field: minValue, valid: false --
--Output from test regular attribute postViews: 0, field: Value, valid: true --
--Output from test regular attribute postViews: 20, field: Value, valid: true --
--Output from test regular attribute strikesNumber: null, field: null, valid: false --
--Output from test regular attribute strikesNumber: -1, field: minValue, valid: false --
--Output from test regular attribute strikesNumber: 4, field: maxValue, valid: false --
--Output from test regular attribute strikesNumber: 2, field: Value, valid: true --
--Output from test regular attribute starsNumber: null, field: null, valid: false --
--Output from test regular attribute starsNumber: -1, field: minValue, valid: false --
--Output from test regular attribute starsNumber: 6, field: maxValue, valid: false --
--Output from test regular attribute starsNumber: 4, field: Value, valid: true --
]]></system-out>

      <system-err><![CDATA[--Output from test regular attribute postViews: null, field: null, valid: false --
--Output from test regular attribute postViews: -1, field: minValue, valid: false --
--Output from test regular attribute postViews: 0, field: Value, valid: true --
--Output from test regular attribute postViews: 20, field: Value, valid: true --
--Output from test regular attribute strikesNumber: null, field: null, valid: false --
--Output from test regular attribute strikesNumber: -1, field: minValue, valid: false --
--Output from test regular attribute strikesNumber: 4, field: maxValue, valid: false --
--Output from test regular attribute strikesNumber: 2, field: Value, valid: true --
--Output from test regular attribute starsNumber: null, field: null, valid: false --
--Output from test regular attribute starsNumber: -1, field: minValue, valid: false --
--Output from test regular attribute starsNumber: 6, field: maxValue, valid: false --
--Output from test regular attribute starsNumber: 4, field: Value, valid: true --
]]></system-err>

  </testsuite>
  <testsuite errors="0" failures="21" hostname="laptop-n4110" id="2" name="UserSpec" package="forotallersd" tests="29" time="0.977" timestamp="2015-10-22T03:06:19">
      <properties />

      <testcase classname="forotallersd.UserSpec" name="test user attribute name: ab, field: minSize, valid: false " time="0.167">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_name.errors.hasFieldErrors(&quot;name&quot;) == false&#xa;|           |      |                      |&#xa;|           |      true                   false&#xa;|           org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|           Field error in object &apos;forotallersd.User&apos; on field &apos;name&apos;: rejected value [ab]; codes [forotallersd.User.name.size.error.forotallersd.User.name,forotallersd.User.name.size.error.name,forotallersd.User.name.size.error.java.lang.String,forotallersd.User.name.size.error,user.name.size.error.forotallersd.User.name,user.name.size.error.name,user.name.size.error.java.lang.String,user.name.size.error,forotallersd.User.name.size.toosmall.forotallersd.User.name,forotallersd.User.name.size.toosmall.name,forotallersd.User.name.size.toosmall.java.lang.String,forotallersd.User.name.size.toosmall,user.name.size.toosmall.forotallersd.User.name,user.name.size.toosmall.name,user.name.size.toosmall.java.lang.String,user.name.size.toosmall,size.toosmall.forotallersd.User.name,size.toosmall.name,size.toosmall.java.lang.String,size.toosmall]; arguments [name,class forotallersd.User,ab,3,50]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid size range from [{3}] to [{4}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_name.errors.hasFieldErrors(&quot;name&quot;) == false
|           |      |                      |
|           |      true                   false
|           org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|           Field error in object &apos;forotallersd.User&apos; on field &apos;name&apos;: rejected value [ab]; codes [forotallersd.User.name.size.error.forotallersd.User.name,forotallersd.User.name.size.error.name,forotallersd.User.name.size.error.java.lang.String,forotallersd.User.name.size.error,user.name.size.error.forotallersd.User.name,user.name.size.error.name,user.name.size.error.java.lang.String,user.name.size.error,forotallersd.User.name.size.toosmall.forotallersd.User.name,forotallersd.User.name.size.toosmall.name,forotallersd.User.name.size.toosmall.java.lang.String,forotallersd.User.name.size.toosmall,user.name.size.toosmall.forotallersd.User.name,user.name.size.toosmall.name,user.name.size.toosmall.java.lang.String,user.name.size.toosmall,size.toosmall.forotallersd.User.name,size.toosmall.name,size.toosmall.java.lang.String,size.toosmall]; arguments [name,class forotallersd.User,ab,3,50]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid size range from [{3}] to [{4}]]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - name(UserSpec.groovy:27)
</failure>

      </testcase>

      <testcase classname="forotallersd.UserSpec" name="test user attribute name: null, field: null, valid: false " time="0.04">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_name.errors.hasFieldErrors(&quot;name&quot;) == false&#xa;|           |      |                      |&#xa;|           |      true                   false&#xa;|           org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|           Field error in object &apos;forotallersd.User&apos; on field &apos;name&apos;: rejected value [null]; codes [forotallersd.User.name.nullable.error.forotallersd.User.name,forotallersd.User.name.nullable.error.name,forotallersd.User.name.nullable.error.java.lang.String,forotallersd.User.name.nullable.error,user.name.nullable.error.forotallersd.User.name,user.name.nullable.error.name,user.name.nullable.error.java.lang.String,user.name.nullable.error,forotallersd.User.name.nullable.forotallersd.User.name,forotallersd.User.name.nullable.name,forotallersd.User.name.nullable.java.lang.String,forotallersd.User.name.nullable,user.name.nullable.forotallersd.User.name,user.name.nullable.name,user.name.nullable.java.lang.String,user.name.nullable,nullable.forotallersd.User.name,nullable.name,nullable.java.lang.String,nullable]; arguments [name,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_name.errors.hasFieldErrors(&quot;name&quot;) == false
|           |      |                      |
|           |      true                   false
|           org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|           Field error in object &apos;forotallersd.User&apos; on field &apos;name&apos;: rejected value [null]; codes [forotallersd.User.name.nullable.error.forotallersd.User.name,forotallersd.User.name.nullable.error.name,forotallersd.User.name.nullable.error.java.lang.String,forotallersd.User.name.nullable.error,user.name.nullable.error.forotallersd.User.name,user.name.nullable.error.name,user.name.nullable.error.java.lang.String,user.name.nullable.error,forotallersd.User.name.nullable.forotallersd.User.name,forotallersd.User.name.nullable.name,forotallersd.User.name.nullable.java.lang.String,forotallersd.User.name.nullable,user.name.nullable.forotallersd.User.name,user.name.nullable.name,user.name.nullable.java.lang.String,user.name.nullable,nullable.forotallersd.User.name,nullable.name,nullable.java.lang.String,nullable]; arguments [name,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - name(UserSpec.groovy:27)
</failure>

      </testcase>

      <testcase classname="forotallersd.UserSpec" name="test user attribute name: abc, field: size, valid: true " time="0.034" />

      <testcase classname="forotallersd.UserSpec" name="test user attribute name: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeee, field: size, valid: true " time="0.033" />

      <testcase classname="forotallersd.UserSpec" name="test user attribute name: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef, field: maxSize, valid: false " time="0.033">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_name.errors.hasFieldErrors(&quot;name&quot;) == false&#xa;|           |      |                      |&#xa;|           |      true                   false&#xa;|           org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|           Field error in object &apos;forotallersd.User&apos; on field &apos;name&apos;: rejected value [aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef]; codes [forotallersd.User.name.size.error.forotallersd.User.name,forotallersd.User.name.size.error.name,forotallersd.User.name.size.error.java.lang.String,forotallersd.User.name.size.error,user.name.size.error.forotallersd.User.name,user.name.size.error.name,user.name.size.error.java.lang.String,user.name.size.error,forotallersd.User.name.size.toobig.forotallersd.User.name,forotallersd.User.name.size.toobig.name,forotallersd.User.name.size.toobig.java.lang.String,forotallersd.User.name.size.toobig,user.name.size.toobig.forotallersd.User.name,user.name.size.toobig.name,user.name.size.toobig.java.lang.String,user.name.size.toobig,size.toobig.forotallersd.User.name,size.toobig.name,size.toobig.java.lang.String,size.toobig]; arguments [name,class forotallersd.User,aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef,3,50]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid size range from [{3}] to [{4}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_name.errors.hasFieldErrors(&quot;name&quot;) == false
|           |      |                      |
|           |      true                   false
|           org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|           Field error in object &apos;forotallersd.User&apos; on field &apos;name&apos;: rejected value [aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef]; codes [forotallersd.User.name.size.error.forotallersd.User.name,forotallersd.User.name.size.error.name,forotallersd.User.name.size.error.java.lang.String,forotallersd.User.name.size.error,user.name.size.error.forotallersd.User.name,user.name.size.error.name,user.name.size.error.java.lang.String,user.name.size.error,forotallersd.User.name.size.toobig.forotallersd.User.name,forotallersd.User.name.size.toobig.name,forotallersd.User.name.size.toobig.java.lang.String,forotallersd.User.name.size.toobig,user.name.size.toobig.forotallersd.User.name,user.name.size.toobig.name,user.name.size.toobig.java.lang.String,user.name.size.toobig,size.toobig.forotallersd.User.name,size.toobig.name,size.toobig.java.lang.String,size.toobig]; arguments [name,class forotallersd.User,aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef,3,50]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid size range from [{3}] to [{4}]]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - name(UserSpec.groovy:27)
</failure>

      </testcase>

      <testcase classname="forotallersd.UserSpec" name="test user attribute name: , field: blank, valid: false " time="0.042">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_name.errors.hasFieldErrors(&quot;name&quot;) == false&#xa;|           |      |                      |&#xa;|           |      true                   false&#xa;|           org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|           Field error in object &apos;forotallersd.User&apos; on field &apos;name&apos;: rejected value [null]; codes [forotallersd.User.name.nullable.error.forotallersd.User.name,forotallersd.User.name.nullable.error.name,forotallersd.User.name.nullable.error.java.lang.String,forotallersd.User.name.nullable.error,user.name.nullable.error.forotallersd.User.name,user.name.nullable.error.name,user.name.nullable.error.java.lang.String,user.name.nullable.error,forotallersd.User.name.nullable.forotallersd.User.name,forotallersd.User.name.nullable.name,forotallersd.User.name.nullable.java.lang.String,forotallersd.User.name.nullable,user.name.nullable.forotallersd.User.name,user.name.nullable.name,user.name.nullable.java.lang.String,user.name.nullable,nullable.forotallersd.User.name,nullable.name,nullable.java.lang.String,nullable]; arguments [name,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_name.errors.hasFieldErrors(&quot;name&quot;) == false
|           |      |                      |
|           |      true                   false
|           org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|           Field error in object &apos;forotallersd.User&apos; on field &apos;name&apos;: rejected value [null]; codes [forotallersd.User.name.nullable.error.forotallersd.User.name,forotallersd.User.name.nullable.error.name,forotallersd.User.name.nullable.error.java.lang.String,forotallersd.User.name.nullable.error,user.name.nullable.error.forotallersd.User.name,user.name.nullable.error.name,user.name.nullable.error.java.lang.String,user.name.nullable.error,forotallersd.User.name.nullable.forotallersd.User.name,forotallersd.User.name.nullable.name,forotallersd.User.name.nullable.java.lang.String,forotallersd.User.name.nullable,user.name.nullable.forotallersd.User.name,user.name.nullable.name,user.name.nullable.java.lang.String,user.name.nullable,nullable.forotallersd.User.name,nullable.name,nullable.java.lang.String,nullable]; arguments [name,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - name(UserSpec.groovy:27)
</failure>

      </testcase>

      <testcase classname="forotallersd.UserSpec" name="test user attribute lastname: ab, field: minSize, valid: false " time="0.027">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_lastname.errors.hasFieldErrors(&quot;lastname&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;lastname&apos;: rejected value [ab]; codes [forotallersd.User.lastname.size.error.forotallersd.User.lastname,forotallersd.User.lastname.size.error.lastname,forotallersd.User.lastname.size.error.java.lang.String,forotallersd.User.lastname.size.error,user.lastname.size.error.forotallersd.User.lastname,user.lastname.size.error.lastname,user.lastname.size.error.java.lang.String,user.lastname.size.error,forotallersd.User.lastname.size.toosmall.forotallersd.User.lastname,forotallersd.User.lastname.size.toosmall.lastname,forotallersd.User.lastname.size.toosmall.java.lang.String,forotallersd.User.lastname.size.toosmall,user.lastname.size.toosmall.forotallersd.User.lastname,user.lastname.size.toosmall.lastname,user.lastname.size.toosmall.java.lang.String,user.lastname.size.toosmall,size.toosmall.forotallersd.User.lastname,size.toosmall.lastname,size.toosmall.java.lang.String,size.toosmall]; arguments [lastname,class forotallersd.User,ab,3,50]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid size range from [{3}] to [{4}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_lastname.errors.hasFieldErrors(&quot;lastname&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;lastname&apos;: rejected value [ab]; codes [forotallersd.User.lastname.size.error.forotallersd.User.lastname,forotallersd.User.lastname.size.error.lastname,forotallersd.User.lastname.size.error.java.lang.String,forotallersd.User.lastname.size.error,user.lastname.size.error.forotallersd.User.lastname,user.lastname.size.error.lastname,user.lastname.size.error.java.lang.String,user.lastname.size.error,forotallersd.User.lastname.size.toosmall.forotallersd.User.lastname,forotallersd.User.lastname.size.toosmall.lastname,forotallersd.User.lastname.size.toosmall.java.lang.String,forotallersd.User.lastname.size.toosmall,user.lastname.size.toosmall.forotallersd.User.lastname,user.lastname.size.toosmall.lastname,user.lastname.size.toosmall.java.lang.String,user.lastname.size.toosmall,size.toosmall.forotallersd.User.lastname,size.toosmall.lastname,size.toosmall.java.lang.String,size.toosmall]; arguments [lastname,class forotallersd.User,ab,3,50]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid size range from [{3}] to [{4}]]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - lastname(UserSpec.groovy:46)
</failure>

      </testcase>

      <testcase classname="forotallersd.UserSpec" name="test user attribute lastname: null, field: null, valid: false " time="0.025">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_lastname.errors.hasFieldErrors(&quot;lastname&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;lastname&apos;: rejected value [null]; codes [forotallersd.User.lastname.nullable.error.forotallersd.User.lastname,forotallersd.User.lastname.nullable.error.lastname,forotallersd.User.lastname.nullable.error.java.lang.String,forotallersd.User.lastname.nullable.error,user.lastname.nullable.error.forotallersd.User.lastname,user.lastname.nullable.error.lastname,user.lastname.nullable.error.java.lang.String,user.lastname.nullable.error,forotallersd.User.lastname.nullable.forotallersd.User.lastname,forotallersd.User.lastname.nullable.lastname,forotallersd.User.lastname.nullable.java.lang.String,forotallersd.User.lastname.nullable,user.lastname.nullable.forotallersd.User.lastname,user.lastname.nullable.lastname,user.lastname.nullable.java.lang.String,user.lastname.nullable,nullable.forotallersd.User.lastname,nullable.lastname,nullable.java.lang.String,nullable]; arguments [lastname,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_lastname.errors.hasFieldErrors(&quot;lastname&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;lastname&apos;: rejected value [null]; codes [forotallersd.User.lastname.nullable.error.forotallersd.User.lastname,forotallersd.User.lastname.nullable.error.lastname,forotallersd.User.lastname.nullable.error.java.lang.String,forotallersd.User.lastname.nullable.error,user.lastname.nullable.error.forotallersd.User.lastname,user.lastname.nullable.error.lastname,user.lastname.nullable.error.java.lang.String,user.lastname.nullable.error,forotallersd.User.lastname.nullable.forotallersd.User.lastname,forotallersd.User.lastname.nullable.lastname,forotallersd.User.lastname.nullable.java.lang.String,forotallersd.User.lastname.nullable,user.lastname.nullable.forotallersd.User.lastname,user.lastname.nullable.lastname,user.lastname.nullable.java.lang.String,user.lastname.nullable,nullable.forotallersd.User.lastname,nullable.lastname,nullable.java.lang.String,nullable]; arguments [lastname,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - lastname(UserSpec.groovy:46)
</failure>

      </testcase>

      <testcase classname="forotallersd.UserSpec" name="test user attribute lastname: abc, field: size, valid: true " time="0.019" />

      <testcase classname="forotallersd.UserSpec" name="test user attribute lastname: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeee, field: size, valid: true " time="0.019" />

      <testcase classname="forotallersd.UserSpec" name="test user attribute lastname: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef, field: maxSize, valid: false " time="0.025">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_lastname.errors.hasFieldErrors(&quot;lastname&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;lastname&apos;: rejected value [aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef]; codes [forotallersd.User.lastname.size.error.forotallersd.User.lastname,forotallersd.User.lastname.size.error.lastname,forotallersd.User.lastname.size.error.java.lang.String,forotallersd.User.lastname.size.error,user.lastname.size.error.forotallersd.User.lastname,user.lastname.size.error.lastname,user.lastname.size.error.java.lang.String,user.lastname.size.error,forotallersd.User.lastname.size.toobig.forotallersd.User.lastname,forotallersd.User.lastname.size.toobig.lastname,forotallersd.User.lastname.size.toobig.java.lang.String,forotallersd.User.lastname.size.toobig,user.lastname.size.toobig.forotallersd.User.lastname,user.lastname.size.toobig.lastname,user.lastname.size.toobig.java.lang.String,user.lastname.size.toobig,size.toobig.forotallersd.User.lastname,size.toobig.lastname,size.toobig.java.lang.String,size.toobig]; arguments [lastname,class forotallersd.User,aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef,3,50]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid size range from [{3}] to [{4}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_lastname.errors.hasFieldErrors(&quot;lastname&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;lastname&apos;: rejected value [aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef]; codes [forotallersd.User.lastname.size.error.forotallersd.User.lastname,forotallersd.User.lastname.size.error.lastname,forotallersd.User.lastname.size.error.java.lang.String,forotallersd.User.lastname.size.error,user.lastname.size.error.forotallersd.User.lastname,user.lastname.size.error.lastname,user.lastname.size.error.java.lang.String,user.lastname.size.error,forotallersd.User.lastname.size.toobig.forotallersd.User.lastname,forotallersd.User.lastname.size.toobig.lastname,forotallersd.User.lastname.size.toobig.java.lang.String,forotallersd.User.lastname.size.toobig,user.lastname.size.toobig.forotallersd.User.lastname,user.lastname.size.toobig.lastname,user.lastname.size.toobig.java.lang.String,user.lastname.size.toobig,size.toobig.forotallersd.User.lastname,size.toobig.lastname,size.toobig.java.lang.String,size.toobig]; arguments [lastname,class forotallersd.User,aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef,3,50]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid size range from [{3}] to [{4}]]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - lastname(UserSpec.groovy:46)
</failure>

      </testcase>

      <testcase classname="forotallersd.UserSpec" name="test user attribute lastname: , field: blank, valid: false " time="0.023">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_lastname.errors.hasFieldErrors(&quot;lastname&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;lastname&apos;: rejected value [null]; codes [forotallersd.User.lastname.nullable.error.forotallersd.User.lastname,forotallersd.User.lastname.nullable.error.lastname,forotallersd.User.lastname.nullable.error.java.lang.String,forotallersd.User.lastname.nullable.error,user.lastname.nullable.error.forotallersd.User.lastname,user.lastname.nullable.error.lastname,user.lastname.nullable.error.java.lang.String,user.lastname.nullable.error,forotallersd.User.lastname.nullable.forotallersd.User.lastname,forotallersd.User.lastname.nullable.lastname,forotallersd.User.lastname.nullable.java.lang.String,forotallersd.User.lastname.nullable,user.lastname.nullable.forotallersd.User.lastname,user.lastname.nullable.lastname,user.lastname.nullable.java.lang.String,user.lastname.nullable,nullable.forotallersd.User.lastname,nullable.lastname,nullable.java.lang.String,nullable]; arguments [lastname,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_lastname.errors.hasFieldErrors(&quot;lastname&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;lastname&apos;: rejected value [null]; codes [forotallersd.User.lastname.nullable.error.forotallersd.User.lastname,forotallersd.User.lastname.nullable.error.lastname,forotallersd.User.lastname.nullable.error.java.lang.String,forotallersd.User.lastname.nullable.error,user.lastname.nullable.error.forotallersd.User.lastname,user.lastname.nullable.error.lastname,user.lastname.nullable.error.java.lang.String,user.lastname.nullable.error,forotallersd.User.lastname.nullable.forotallersd.User.lastname,forotallersd.User.lastname.nullable.lastname,forotallersd.User.lastname.nullable.java.lang.String,forotallersd.User.lastname.nullable,user.lastname.nullable.forotallersd.User.lastname,user.lastname.nullable.lastname,user.lastname.nullable.java.lang.String,user.lastname.nullable,nullable.forotallersd.User.lastname,nullable.lastname,nullable.java.lang.String,nullable]; arguments [lastname,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - lastname(UserSpec.groovy:46)
</failure>

      </testcase>

      <testcase classname="forotallersd.UserSpec" name="test user attribute age: 13, field: minAge, valid: false " time="0.021">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_age.errors.hasFieldErrors(&quot;age&quot;) == false&#xa;|          |      |                     |&#xa;|          |      true                  false&#xa;|          org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|          Field error in object &apos;forotallersd.User&apos; on field &apos;age&apos;: rejected value [13]; codes [forotallersd.User.age.min.error.forotallersd.User.age,forotallersd.User.age.min.error.age,forotallersd.User.age.min.error.java.lang.Integer,forotallersd.User.age.min.error,user.age.min.error.forotallersd.User.age,user.age.min.error.age,user.age.min.error.java.lang.Integer,user.age.min.error,forotallersd.User.age.min.notmet.forotallersd.User.age,forotallersd.User.age.min.notmet.age,forotallersd.User.age.min.notmet.java.lang.Integer,forotallersd.User.age.min.notmet,user.age.min.notmet.forotallersd.User.age,user.age.min.notmet.age,user.age.min.notmet.java.lang.Integer,user.age.min.notmet,min.notmet.forotallersd.User.age,min.notmet.age,min.notmet.java.lang.Integer,min.notmet]; arguments [age,class forotallersd.User,13,14]; default message [Property [{0}] of class [{1}] with value [{2}] is less than minimum value [{3}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_age.errors.hasFieldErrors(&quot;age&quot;) == false
|          |      |                     |
|          |      true                  false
|          org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|          Field error in object &apos;forotallersd.User&apos; on field &apos;age&apos;: rejected value [13]; codes [forotallersd.User.age.min.error.forotallersd.User.age,forotallersd.User.age.min.error.age,forotallersd.User.age.min.error.java.lang.Integer,forotallersd.User.age.min.error,user.age.min.error.forotallersd.User.age,user.age.min.error.age,user.age.min.error.java.lang.Integer,user.age.min.error,forotallersd.User.age.min.notmet.forotallersd.User.age,forotallersd.User.age.min.notmet.age,forotallersd.User.age.min.notmet.java.lang.Integer,forotallersd.User.age.min.notmet,user.age.min.notmet.forotallersd.User.age,user.age.min.notmet.age,user.age.min.notmet.java.lang.Integer,user.age.min.notmet,min.notmet.forotallersd.User.age,min.notmet.age,min.notmet.java.lang.Integer,min.notmet]; arguments [age,class forotallersd.User,13,14]; default message [Property [{0}] of class [{1}] with value [{2}] is less than minimum value [{3}]]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - age(UserSpec.groovy:65)
</failure>

      </testcase>

      <testcase classname="forotallersd.UserSpec" name="test user attribute age: 14, field: Age, valid: true " time="0.017" />

      <testcase classname="forotallersd.UserSpec" name="test user attribute username: , field: blank, valid: false " time="0.052">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_username.errors.hasFieldErrors(&quot;username&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;username&apos;: rejected value [null]; codes [forotallersd.User.username.nullable.error.forotallersd.User.username,forotallersd.User.username.nullable.error.username,forotallersd.User.username.nullable.error.java.lang.String,forotallersd.User.username.nullable.error,user.username.nullable.error.forotallersd.User.username,user.username.nullable.error.username,user.username.nullable.error.java.lang.String,user.username.nullable.error,forotallersd.User.username.nullable.forotallersd.User.username,forotallersd.User.username.nullable.username,forotallersd.User.username.nullable.java.lang.String,forotallersd.User.username.nullable,user.username.nullable.forotallersd.User.username,user.username.nullable.username,user.username.nullable.java.lang.String,user.username.nullable,nullable.forotallersd.User.username,nullable.username,nullable.java.lang.String,nullable]; arguments [username,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_username.errors.hasFieldErrors(&quot;username&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;username&apos;: rejected value [null]; codes [forotallersd.User.username.nullable.error.forotallersd.User.username,forotallersd.User.username.nullable.error.username,forotallersd.User.username.nullable.error.java.lang.String,forotallersd.User.username.nullable.error,user.username.nullable.error.forotallersd.User.username,user.username.nullable.error.username,user.username.nullable.error.java.lang.String,user.username.nullable.error,forotallersd.User.username.nullable.forotallersd.User.username,forotallersd.User.username.nullable.username,forotallersd.User.username.nullable.java.lang.String,forotallersd.User.username.nullable,user.username.nullable.forotallersd.User.username,user.username.nullable.username,user.username.nullable.java.lang.String,user.username.nullable,nullable.forotallersd.User.username,nullable.username,nullable.java.lang.String,nullable]; arguments [username,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - username(UserSpec.groovy:83)
</failure>

      </testcase>

      <testcase classname="forotallersd.UserSpec" name="test user attribute username: null, field: null, valid: false " time="0.027">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_username.errors.hasFieldErrors(&quot;username&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;username&apos;: rejected value [null]; codes [forotallersd.User.username.nullable.error.forotallersd.User.username,forotallersd.User.username.nullable.error.username,forotallersd.User.username.nullable.error.java.lang.String,forotallersd.User.username.nullable.error,user.username.nullable.error.forotallersd.User.username,user.username.nullable.error.username,user.username.nullable.error.java.lang.String,user.username.nullable.error,forotallersd.User.username.nullable.forotallersd.User.username,forotallersd.User.username.nullable.username,forotallersd.User.username.nullable.java.lang.String,forotallersd.User.username.nullable,user.username.nullable.forotallersd.User.username,user.username.nullable.username,user.username.nullable.java.lang.String,user.username.nullable,nullable.forotallersd.User.username,nullable.username,nullable.java.lang.String,nullable]; arguments [username,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_username.errors.hasFieldErrors(&quot;username&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;username&apos;: rejected value [null]; codes [forotallersd.User.username.nullable.error.forotallersd.User.username,forotallersd.User.username.nullable.error.username,forotallersd.User.username.nullable.error.java.lang.String,forotallersd.User.username.nullable.error,user.username.nullable.error.forotallersd.User.username,user.username.nullable.error.username,user.username.nullable.error.java.lang.String,user.username.nullable.error,forotallersd.User.username.nullable.forotallersd.User.username,forotallersd.User.username.nullable.username,forotallersd.User.username.nullable.java.lang.String,forotallersd.User.username.nullable,user.username.nullable.forotallersd.User.username,user.username.nullable.username,user.username.nullable.java.lang.String,user.username.nullable,nullable.forotallersd.User.username,nullable.username,nullable.java.lang.String,nullable]; arguments [username,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - username(UserSpec.groovy:83)
</failure>

      </testcase>

      <testcase classname="forotallersd.UserSpec" name="test user attribute username: pablo, field: unique, valid: false " time="0.024">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_username.errors.hasFieldErrors(&quot;username&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;username&apos;: rejected value [pablo]; codes [unique.forotallersd.User.username,unique.username,unique.java.lang.String,unique]; arguments []; default message [null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_username.errors.hasFieldErrors(&quot;username&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;username&apos;: rejected value [pablo]; codes [unique.forotallersd.User.username,unique.username,unique.java.lang.String,unique]; arguments []; default message [null]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - username(UserSpec.groovy:83)
</failure>

      </testcase>

      <testcase classname="forotallersd.UserSpec" name="test user attribute username: pedro, field: username, valid: true " time="0.021" />

      <testcase classname="forotallersd.UserSpec" name="test user attribute password: , field: blank, valid: false " time="0.021">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [null]; codes [forotallersd.User.password.nullable.error.forotallersd.User.password,forotallersd.User.password.nullable.error.password,forotallersd.User.password.nullable.error.java.lang.String,forotallersd.User.password.nullable.error,user.password.nullable.error.forotallersd.User.password,user.password.nullable.error.password,user.password.nullable.error.java.lang.String,user.password.nullable.error,forotallersd.User.password.nullable.forotallersd.User.password,forotallersd.User.password.nullable.password,forotallersd.User.password.nullable.java.lang.String,forotallersd.User.password.nullable,user.password.nullable.forotallersd.User.password,user.password.nullable.password,user.password.nullable.java.lang.String,user.password.nullable,nullable.forotallersd.User.password,nullable.password,nullable.java.lang.String,nullable]; arguments [password,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [null]; codes [forotallersd.User.password.nullable.error.forotallersd.User.password,forotallersd.User.password.nullable.error.password,forotallersd.User.password.nullable.error.java.lang.String,forotallersd.User.password.nullable.error,user.password.nullable.error.forotallersd.User.password,user.password.nullable.error.password,user.password.nullable.error.java.lang.String,user.password.nullable.error,forotallersd.User.password.nullable.forotallersd.User.password,forotallersd.User.password.nullable.password,forotallersd.User.password.nullable.java.lang.String,forotallersd.User.password.nullable,user.password.nullable.forotallersd.User.password,user.password.nullable.password,user.password.nullable.java.lang.String,user.password.nullable,nullable.forotallersd.User.password,nullable.password,nullable.java.lang.String,nullable]; arguments [password,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>

      </testcase>

      <testcase classname="forotallersd.UserSpec" name="test user attribute password: null, field: null, valid: false " time="0.021">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [null]; codes [forotallersd.User.password.nullable.error.forotallersd.User.password,forotallersd.User.password.nullable.error.password,forotallersd.User.password.nullable.error.java.lang.String,forotallersd.User.password.nullable.error,user.password.nullable.error.forotallersd.User.password,user.password.nullable.error.password,user.password.nullable.error.java.lang.String,user.password.nullable.error,forotallersd.User.password.nullable.forotallersd.User.password,forotallersd.User.password.nullable.password,forotallersd.User.password.nullable.java.lang.String,forotallersd.User.password.nullable,user.password.nullable.forotallersd.User.password,user.password.nullable.password,user.password.nullable.java.lang.String,user.password.nullable,nullable.forotallersd.User.password,nullable.password,nullable.java.lang.String,nullable]; arguments [password,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [null]; codes [forotallersd.User.password.nullable.error.forotallersd.User.password,forotallersd.User.password.nullable.error.password,forotallersd.User.password.nullable.error.java.lang.String,forotallersd.User.password.nullable.error,user.password.nullable.error.forotallersd.User.password,user.password.nullable.error.password,user.password.nullable.error.java.lang.String,user.password.nullable.error,forotallersd.User.password.nullable.forotallersd.User.password,forotallersd.User.password.nullable.password,forotallersd.User.password.nullable.java.lang.String,forotallersd.User.password.nullable,user.password.nullable.forotallersd.User.password,user.password.nullable.password,user.password.nullable.java.lang.String,user.password.nullable,nullable.forotallersd.User.password,nullable.password,nullable.java.lang.String,nullable]; arguments [password,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>

      </testcase>

      <testcase classname="forotallersd.UserSpec" name="test user attribute password: aaaaaA1, field: minSize, valid: false " time="0.023">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [aaaaaA1]; codes [forotallersd.User.password.minSize.error.forotallersd.User.password,forotallersd.User.password.minSize.error.password,forotallersd.User.password.minSize.error.java.lang.String,forotallersd.User.password.minSize.error,user.password.minSize.error.forotallersd.User.password,user.password.minSize.error.password,user.password.minSize.error.java.lang.String,user.password.minSize.error,forotallersd.User.password.minSize.notmet.forotallersd.User.password,forotallersd.User.password.minSize.notmet.password,forotallersd.User.password.minSize.notmet.java.lang.String,forotallersd.User.password.minSize.notmet,user.password.minSize.notmet.forotallersd.User.password,user.password.minSize.notmet.password,user.password.minSize.notmet.java.lang.String,user.password.minSize.notmet,minSize.notmet.forotallersd.User.password,minSize.notmet.password,minSize.notmet.java.lang.String,minSize.notmet]; arguments [password,class forotallersd.User,aaaaaA1,8]; default message [Property [{0}] of class [{1}] with value [{2}] is less than the minimum size of [{3}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [aaaaaA1]; codes [forotallersd.User.password.minSize.error.forotallersd.User.password,forotallersd.User.password.minSize.error.password,forotallersd.User.password.minSize.error.java.lang.String,forotallersd.User.password.minSize.error,user.password.minSize.error.forotallersd.User.password,user.password.minSize.error.password,user.password.minSize.error.java.lang.String,user.password.minSize.error,forotallersd.User.password.minSize.notmet.forotallersd.User.password,forotallersd.User.password.minSize.notmet.password,forotallersd.User.password.minSize.notmet.java.lang.String,forotallersd.User.password.minSize.notmet,user.password.minSize.notmet.forotallersd.User.password,user.password.minSize.notmet.password,user.password.minSize.notmet.java.lang.String,user.password.minSize.notmet,minSize.notmet.forotallersd.User.password,minSize.notmet.password,minSize.notmet.java.lang.String,minSize.notmet]; arguments [password,class forotallersd.User,aaaaaA1,8]; default message [Property [{0}] of class [{1}] with value [{2}] is less than the minimum size of [{3}]]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>

      </testcase>

      <testcase classname="forotallersd.UserSpec" name="test user attribute password: aaaaaaaaa, field: notCorrect, valid: false " time="0.024">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [aaaaaaaaa]; codes [forotallersd.User.password.matches.error.forotallersd.User.password,forotallersd.User.password.matches.error.password,forotallersd.User.password.matches.error.java.lang.String,forotallersd.User.password.matches.error,user.password.matches.error.forotallersd.User.password,user.password.matches.error.password,user.password.matches.error.java.lang.String,user.password.matches.error,forotallersd.User.password.matches.invalid.forotallersd.User.password,forotallersd.User.password.matches.invalid.password,forotallersd.User.password.matches.invalid.java.lang.String,forotallersd.User.password.matches.invalid,user.password.matches.invalid.forotallersd.User.password,user.password.matches.invalid.password,user.password.matches.invalid.java.lang.String,user.password.matches.invalid,matches.invalid.forotallersd.User.password,matches.invalid.password,matches.invalid.java.lang.String,matches.invalid]; arguments [password,class forotallersd.User,aaaaaaaaa,^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$]; default message [Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [aaaaaaaaa]; codes [forotallersd.User.password.matches.error.forotallersd.User.password,forotallersd.User.password.matches.error.password,forotallersd.User.password.matches.error.java.lang.String,forotallersd.User.password.matches.error,user.password.matches.error.forotallersd.User.password,user.password.matches.error.password,user.password.matches.error.java.lang.String,user.password.matches.error,forotallersd.User.password.matches.invalid.forotallersd.User.password,forotallersd.User.password.matches.invalid.password,forotallersd.User.password.matches.invalid.java.lang.String,forotallersd.User.password.matches.invalid,user.password.matches.invalid.forotallersd.User.password,user.password.matches.invalid.password,user.password.matches.invalid.java.lang.String,user.password.matches.invalid,matches.invalid.forotallersd.User.password,matches.invalid.password,matches.invalid.java.lang.String,matches.invalid]; arguments [password,class forotallersd.User,aaaaaaaaa,^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$]; default message [Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>

      </testcase>

      <testcase classname="forotallersd.UserSpec" name="test user attribute password: aaaaaaaaa1, field: notCorrect, valid: false " time="0.024">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [aaaaaaaaa1]; codes [forotallersd.User.password.matches.error.forotallersd.User.password,forotallersd.User.password.matches.error.password,forotallersd.User.password.matches.error.java.lang.String,forotallersd.User.password.matches.error,user.password.matches.error.forotallersd.User.password,user.password.matches.error.password,user.password.matches.error.java.lang.String,user.password.matches.error,forotallersd.User.password.matches.invalid.forotallersd.User.password,forotallersd.User.password.matches.invalid.password,forotallersd.User.password.matches.invalid.java.lang.String,forotallersd.User.password.matches.invalid,user.password.matches.invalid.forotallersd.User.password,user.password.matches.invalid.password,user.password.matches.invalid.java.lang.String,user.password.matches.invalid,matches.invalid.forotallersd.User.password,matches.invalid.password,matches.invalid.java.lang.String,matches.invalid]; arguments [password,class forotallersd.User,aaaaaaaaa1,^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$]; default message [Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [aaaaaaaaa1]; codes [forotallersd.User.password.matches.error.forotallersd.User.password,forotallersd.User.password.matches.error.password,forotallersd.User.password.matches.error.java.lang.String,forotallersd.User.password.matches.error,user.password.matches.error.forotallersd.User.password,user.password.matches.error.password,user.password.matches.error.java.lang.String,user.password.matches.error,forotallersd.User.password.matches.invalid.forotallersd.User.password,forotallersd.User.password.matches.invalid.password,forotallersd.User.password.matches.invalid.java.lang.String,forotallersd.User.password.matches.invalid,user.password.matches.invalid.forotallersd.User.password,user.password.matches.invalid.password,user.password.matches.invalid.java.lang.String,user.password.matches.invalid,matches.invalid.forotallersd.User.password,matches.invalid.password,matches.invalid.java.lang.String,matches.invalid]; arguments [password,class forotallersd.User,aaaaaaaaa1,^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$]; default message [Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>

      </testcase>

      <testcase classname="forotallersd.UserSpec" name="test user attribute password: 1111111111, field: notCorrect, valid: false " time="0.035">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [1111111111]; codes [forotallersd.User.password.matches.error.forotallersd.User.password,forotallersd.User.password.matches.error.password,forotallersd.User.password.matches.error.java.lang.String,forotallersd.User.password.matches.error,user.password.matches.error.forotallersd.User.password,user.password.matches.error.password,user.password.matches.error.java.lang.String,user.password.matches.error,forotallersd.User.password.matches.invalid.forotallersd.User.password,forotallersd.User.password.matches.invalid.password,forotallersd.User.password.matches.invalid.java.lang.String,forotallersd.User.password.matches.invalid,user.password.matches.invalid.forotallersd.User.password,user.password.matches.invalid.password,user.password.matches.invalid.java.lang.String,user.password.matches.invalid,matches.invalid.forotallersd.User.password,matches.invalid.password,matches.invalid.java.lang.String,matches.invalid]; arguments [password,class forotallersd.User,1111111111,^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$]; default message [Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [1111111111]; codes [forotallersd.User.password.matches.error.forotallersd.User.password,forotallersd.User.password.matches.error.password,forotallersd.User.password.matches.error.java.lang.String,forotallersd.User.password.matches.error,user.password.matches.error.forotallersd.User.password,user.password.matches.error.password,user.password.matches.error.java.lang.String,user.password.matches.error,forotallersd.User.password.matches.invalid.forotallersd.User.password,forotallersd.User.password.matches.invalid.password,forotallersd.User.password.matches.invalid.java.lang.String,forotallersd.User.password.matches.invalid,user.password.matches.invalid.forotallersd.User.password,user.password.matches.invalid.password,user.password.matches.invalid.java.lang.String,user.password.matches.invalid,matches.invalid.forotallersd.User.password,matches.invalid.password,matches.invalid.java.lang.String,matches.invalid]; arguments [password,class forotallersd.User,1111111111,^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$]; default message [Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>

      </testcase>

      <testcase classname="forotallersd.UserSpec" name="test user attribute password: 111111111A, field: notCorrect, valid: false " time="0.033">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [111111111A]; codes [forotallersd.User.password.matches.error.forotallersd.User.password,forotallersd.User.password.matches.error.password,forotallersd.User.password.matches.error.java.lang.String,forotallersd.User.password.matches.error,user.password.matches.error.forotallersd.User.password,user.password.matches.error.password,user.password.matches.error.java.lang.String,user.password.matches.error,forotallersd.User.password.matches.invalid.forotallersd.User.password,forotallersd.User.password.matches.invalid.password,forotallersd.User.password.matches.invalid.java.lang.String,forotallersd.User.password.matches.invalid,user.password.matches.invalid.forotallersd.User.password,user.password.matches.invalid.password,user.password.matches.invalid.java.lang.String,user.password.matches.invalid,matches.invalid.forotallersd.User.password,matches.invalid.password,matches.invalid.java.lang.String,matches.invalid]; arguments [password,class forotallersd.User,111111111A,^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$]; default message [Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [111111111A]; codes [forotallersd.User.password.matches.error.forotallersd.User.password,forotallersd.User.password.matches.error.password,forotallersd.User.password.matches.error.java.lang.String,forotallersd.User.password.matches.error,user.password.matches.error.forotallersd.User.password,user.password.matches.error.password,user.password.matches.error.java.lang.String,user.password.matches.error,forotallersd.User.password.matches.invalid.forotallersd.User.password,forotallersd.User.password.matches.invalid.password,forotallersd.User.password.matches.invalid.java.lang.String,forotallersd.User.password.matches.invalid,user.password.matches.invalid.forotallersd.User.password,user.password.matches.invalid.password,user.password.matches.invalid.java.lang.String,user.password.matches.invalid,matches.invalid.forotallersd.User.password,matches.invalid.password,matches.invalid.java.lang.String,matches.invalid]; arguments [password,class forotallersd.User,111111111A,^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$]; default message [Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>

      </testcase>

      <testcase classname="forotallersd.UserSpec" name="test user attribute password: AAAAAAAAAa, field: notCorrect, valid: false " time="0.031">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [AAAAAAAAAa]; codes [forotallersd.User.password.matches.error.forotallersd.User.password,forotallersd.User.password.matches.error.password,forotallersd.User.password.matches.error.java.lang.String,forotallersd.User.password.matches.error,user.password.matches.error.forotallersd.User.password,user.password.matches.error.password,user.password.matches.error.java.lang.String,user.password.matches.error,forotallersd.User.password.matches.invalid.forotallersd.User.password,forotallersd.User.password.matches.invalid.password,forotallersd.User.password.matches.invalid.java.lang.String,forotallersd.User.password.matches.invalid,user.password.matches.invalid.forotallersd.User.password,user.password.matches.invalid.password,user.password.matches.invalid.java.lang.String,user.password.matches.invalid,matches.invalid.forotallersd.User.password,matches.invalid.password,matches.invalid.java.lang.String,matches.invalid]; arguments [password,class forotallersd.User,AAAAAAAAAa,^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$]; default message [Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [AAAAAAAAAa]; codes [forotallersd.User.password.matches.error.forotallersd.User.password,forotallersd.User.password.matches.error.password,forotallersd.User.password.matches.error.java.lang.String,forotallersd.User.password.matches.error,user.password.matches.error.forotallersd.User.password,user.password.matches.error.password,user.password.matches.error.java.lang.String,user.password.matches.error,forotallersd.User.password.matches.invalid.forotallersd.User.password,forotallersd.User.password.matches.invalid.password,forotallersd.User.password.matches.invalid.java.lang.String,forotallersd.User.password.matches.invalid,user.password.matches.invalid.forotallersd.User.password,user.password.matches.invalid.password,user.password.matches.invalid.java.lang.String,user.password.matches.invalid,matches.invalid.forotallersd.User.password,matches.invalid.password,matches.invalid.java.lang.String,matches.invalid]; arguments [password,class forotallersd.User,AAAAAAAAAa,^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$]; default message [Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>

      </testcase>

      <testcase classname="forotallersd.UserSpec" name="test user attribute password: 11111a1111, field: notCorrect, valid: false " time="0.03">
          <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [11111a1111]; codes [forotallersd.User.password.matches.error.forotallersd.User.password,forotallersd.User.password.matches.error.password,forotallersd.User.password.matches.error.java.lang.String,forotallersd.User.password.matches.error,user.password.matches.error.forotallersd.User.password,user.password.matches.error.password,user.password.matches.error.java.lang.String,user.password.matches.error,forotallersd.User.password.matches.invalid.forotallersd.User.password,forotallersd.User.password.matches.invalid.password,forotallersd.User.password.matches.invalid.java.lang.String,forotallersd.User.password.matches.invalid,user.password.matches.invalid.forotallersd.User.password,user.password.matches.invalid.password,user.password.matches.invalid.java.lang.String,user.password.matches.invalid,matches.invalid.forotallersd.User.password,matches.invalid.password,matches.invalid.java.lang.String,matches.invalid]; arguments [password,class forotallersd.User,11111a1111,^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$]; default message [Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [11111a1111]; codes [forotallersd.User.password.matches.error.forotallersd.User.password,forotallersd.User.password.matches.error.password,forotallersd.User.password.matches.error.java.lang.String,forotallersd.User.password.matches.error,user.password.matches.error.forotallersd.User.password,user.password.matches.error.password,user.password.matches.error.java.lang.String,user.password.matches.error,forotallersd.User.password.matches.invalid.forotallersd.User.password,forotallersd.User.password.matches.invalid.password,forotallersd.User.password.matches.invalid.java.lang.String,forotallersd.User.password.matches.invalid,user.password.matches.invalid.forotallersd.User.password,user.password.matches.invalid.password,user.password.matches.invalid.java.lang.String,user.password.matches.invalid,matches.invalid.forotallersd.User.password,matches.invalid.password,matches.invalid.java.lang.String,matches.invalid]; arguments [password,class forotallersd.User,11111a1111,^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$]; default message [Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>

      </testcase>

      <testcase classname="forotallersd.UserSpec" name="test user attribute password: Prueba2015, field: CorrectPassword, valid: true " time="0.031" />

      <testcase classname="forotallersd.UserSpec" name="test user attribute password: comoPuede5, field: CorrectPassword, valid: true " time="0.019" />

      <system-out><![CDATA[--Output from test user attribute name: ab, field: minSize, valid: false --
--Output from test user attribute name: null, field: null, valid: false --
--Output from test user attribute name: abc, field: size, valid: true --
--Output from test user attribute name: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeee, field: size, valid: true --
--Output from test user attribute name: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef, field: maxSize, valid: false --
--Output from test user attribute name: , field: blank, valid: false --
--Output from test user attribute lastname: ab, field: minSize, valid: false --
--Output from test user attribute lastname: null, field: null, valid: false --
--Output from test user attribute lastname: abc, field: size, valid: true --
--Output from test user attribute lastname: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeee, field: size, valid: true --
--Output from test user attribute lastname: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef, field: maxSize, valid: false --
--Output from test user attribute lastname: , field: blank, valid: false --
--Output from test user attribute age: 13, field: minAge, valid: false --
--Output from test user attribute age: 14, field: Age, valid: true --
--Output from test user attribute username: , field: blank, valid: false --
--Output from test user attribute username: null, field: null, valid: false --
--Output from test user attribute username: pablo, field: unique, valid: false --
--Output from test user attribute username: pedro, field: username, valid: true --
--Output from test user attribute password: , field: blank, valid: false --
--Output from test user attribute password: null, field: null, valid: false --
--Output from test user attribute password: aaaaaA1, field: minSize, valid: false --
--Output from test user attribute password: aaaaaaaaa, field: notCorrect, valid: false --
--Output from test user attribute password: aaaaaaaaa1, field: notCorrect, valid: false --
--Output from test user attribute password: 1111111111, field: notCorrect, valid: false --
--Output from test user attribute password: 111111111A, field: notCorrect, valid: false --
--Output from test user attribute password: AAAAAAAAAa, field: notCorrect, valid: false --
--Output from test user attribute password: 11111a1111, field: notCorrect, valid: false --
--Output from test user attribute password: Prueba2015, field: CorrectPassword, valid: true --
--Output from test user attribute password: comoPuede5, field: CorrectPassword, valid: true --
]]></system-out>

      <system-err><![CDATA[--Output from test user attribute name: ab, field: minSize, valid: false --
--Output from test user attribute name: null, field: null, valid: false --
--Output from test user attribute name: abc, field: size, valid: true --
--Output from test user attribute name: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeee, field: size, valid: true --
--Output from test user attribute name: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef, field: maxSize, valid: false --
--Output from test user attribute name: , field: blank, valid: false --
--Output from test user attribute lastname: ab, field: minSize, valid: false --
--Output from test user attribute lastname: null, field: null, valid: false --
--Output from test user attribute lastname: abc, field: size, valid: true --
--Output from test user attribute lastname: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeee, field: size, valid: true --
--Output from test user attribute lastname: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef, field: maxSize, valid: false --
--Output from test user attribute lastname: , field: blank, valid: false --
--Output from test user attribute age: 13, field: minAge, valid: false --
--Output from test user attribute age: 14, field: Age, valid: true --
--Output from test user attribute username: , field: blank, valid: false --
--Output from test user attribute username: null, field: null, valid: false --
--Output from test user attribute username: pablo, field: unique, valid: false --
--Output from test user attribute username: pedro, field: username, valid: true --
--Output from test user attribute password: , field: blank, valid: false --
--Output from test user attribute password: null, field: null, valid: false --
--Output from test user attribute password: aaaaaA1, field: minSize, valid: false --
--Output from test user attribute password: aaaaaaaaa, field: notCorrect, valid: false --
--Output from test user attribute password: aaaaaaaaa1, field: notCorrect, valid: false --
--Output from test user attribute password: 1111111111, field: notCorrect, valid: false --
--Output from test user attribute password: 111111111A, field: notCorrect, valid: false --
--Output from test user attribute password: AAAAAAAAAa, field: notCorrect, valid: false --
--Output from test user attribute password: 11111a1111, field: notCorrect, valid: false --
--Output from test user attribute password: Prueba2015, field: CorrectPassword, valid: true --
--Output from test user attribute password: comoPuede5, field: CorrectPassword, valid: true --
]]></system-err>

  </testsuite>
</testsuites>
