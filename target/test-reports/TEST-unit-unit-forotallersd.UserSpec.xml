<?xml version="1.0" encoding="UTF-8" ?>
<testsuite errors="0" failures="21" hostname="laptop-n4110" name="forotallersd.UserSpec" tests="29" time="1.127" timestamp="2015-10-22T20:11:31">
  <properties />
  <testcase classname="forotallersd.UserSpec" name="test user attribute name: ab, field: minSize, valid: false " time="0.229">
    <failure message="Condition not satisfied:&#xa;&#xa;t_user_name.errors.hasFieldErrors(&quot;name&quot;) == false&#xa;|           |      |                      |&#xa;|           |      true                   false&#xa;|           org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|           Field error in object &apos;forotallersd.User&apos; on field &apos;name&apos;: rejected value [ab]; codes [forotallersd.User.name.size.error.forotallersd.User.name,forotallersd.User.name.size.error.name,forotallersd.User.name.size.error.java.lang.String,forotallersd.User.name.size.error,user.name.size.error.forotallersd.User.name,user.name.size.error.name,user.name.size.error.java.lang.String,user.name.size.error,forotallersd.User.name.size.toosmall.forotallersd.User.name,forotallersd.User.name.size.toosmall.name,forotallersd.User.name.size.toosmall.java.lang.String,forotallersd.User.name.size.toosmall,user.name.size.toosmall.forotallersd.User.name,user.name.size.toosmall.name,user.name.size.toosmall.java.lang.String,user.name.size.toosmall,size.toosmall.forotallersd.User.name,size.toosmall.name,size.toosmall.java.lang.String,size.toosmall]; arguments [name,class forotallersd.User,ab,3,50]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid size range from [{3}] to [{4}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_name.errors.hasFieldErrors(&quot;name&quot;) == false
|           |      |                      |
|           |      true                   false
|           org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|           Field error in object &apos;forotallersd.User&apos; on field &apos;name&apos;: rejected value [ab]; codes [forotallersd.User.name.size.error.forotallersd.User.name,forotallersd.User.name.size.error.name,forotallersd.User.name.size.error.java.lang.String,forotallersd.User.name.size.error,user.name.size.error.forotallersd.User.name,user.name.size.error.name,user.name.size.error.java.lang.String,user.name.size.error,forotallersd.User.name.size.toosmall.forotallersd.User.name,forotallersd.User.name.size.toosmall.name,forotallersd.User.name.size.toosmall.java.lang.String,forotallersd.User.name.size.toosmall,user.name.size.toosmall.forotallersd.User.name,user.name.size.toosmall.name,user.name.size.toosmall.java.lang.String,user.name.size.toosmall,size.toosmall.forotallersd.User.name,size.toosmall.name,size.toosmall.java.lang.String,size.toosmall]; arguments [name,class forotallersd.User,ab,3,50]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid size range from [{3}] to [{4}]]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - name(UserSpec.groovy:27)
</failure>
  </testcase>
  <testcase classname="forotallersd.UserSpec" name="test user attribute name: null, field: null, valid: false " time="0.044">
    <failure message="Condition not satisfied:&#xa;&#xa;t_user_name.errors.hasFieldErrors(&quot;name&quot;) == false&#xa;|           |      |                      |&#xa;|           |      true                   false&#xa;|           org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|           Field error in object &apos;forotallersd.User&apos; on field &apos;name&apos;: rejected value [null]; codes [forotallersd.User.name.nullable.error.forotallersd.User.name,forotallersd.User.name.nullable.error.name,forotallersd.User.name.nullable.error.java.lang.String,forotallersd.User.name.nullable.error,user.name.nullable.error.forotallersd.User.name,user.name.nullable.error.name,user.name.nullable.error.java.lang.String,user.name.nullable.error,forotallersd.User.name.nullable.forotallersd.User.name,forotallersd.User.name.nullable.name,forotallersd.User.name.nullable.java.lang.String,forotallersd.User.name.nullable,user.name.nullable.forotallersd.User.name,user.name.nullable.name,user.name.nullable.java.lang.String,user.name.nullable,nullable.forotallersd.User.name,nullable.name,nullable.java.lang.String,nullable]; arguments [name,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_name.errors.hasFieldErrors(&quot;name&quot;) == false
|           |      |                      |
|           |      true                   false
|           org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|           Field error in object &apos;forotallersd.User&apos; on field &apos;name&apos;: rejected value [null]; codes [forotallersd.User.name.nullable.error.forotallersd.User.name,forotallersd.User.name.nullable.error.name,forotallersd.User.name.nullable.error.java.lang.String,forotallersd.User.name.nullable.error,user.name.nullable.error.forotallersd.User.name,user.name.nullable.error.name,user.name.nullable.error.java.lang.String,user.name.nullable.error,forotallersd.User.name.nullable.forotallersd.User.name,forotallersd.User.name.nullable.name,forotallersd.User.name.nullable.java.lang.String,forotallersd.User.name.nullable,user.name.nullable.forotallersd.User.name,user.name.nullable.name,user.name.nullable.java.lang.String,user.name.nullable,nullable.forotallersd.User.name,nullable.name,nullable.java.lang.String,nullable]; arguments [name,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - name(UserSpec.groovy:27)
</failure>
  </testcase>
  <testcase classname="forotallersd.UserSpec" name="test user attribute name: abc, field: size, valid: true " time="0.032" />
  <testcase classname="forotallersd.UserSpec" name="test user attribute name: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeee, field: size, valid: true " time="0.056" />
  <testcase classname="forotallersd.UserSpec" name="test user attribute name: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef, field: maxSize, valid: false " time="0.05">
    <failure message="Condition not satisfied:&#xa;&#xa;t_user_name.errors.hasFieldErrors(&quot;name&quot;) == false&#xa;|           |      |                      |&#xa;|           |      true                   false&#xa;|           org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|           Field error in object &apos;forotallersd.User&apos; on field &apos;name&apos;: rejected value [aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef]; codes [forotallersd.User.name.size.error.forotallersd.User.name,forotallersd.User.name.size.error.name,forotallersd.User.name.size.error.java.lang.String,forotallersd.User.name.size.error,user.name.size.error.forotallersd.User.name,user.name.size.error.name,user.name.size.error.java.lang.String,user.name.size.error,forotallersd.User.name.size.toobig.forotallersd.User.name,forotallersd.User.name.size.toobig.name,forotallersd.User.name.size.toobig.java.lang.String,forotallersd.User.name.size.toobig,user.name.size.toobig.forotallersd.User.name,user.name.size.toobig.name,user.name.size.toobig.java.lang.String,user.name.size.toobig,size.toobig.forotallersd.User.name,size.toobig.name,size.toobig.java.lang.String,size.toobig]; arguments [name,class forotallersd.User,aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef,3,50]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid size range from [{3}] to [{4}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_name.errors.hasFieldErrors(&quot;name&quot;) == false
|           |      |                      |
|           |      true                   false
|           org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|           Field error in object &apos;forotallersd.User&apos; on field &apos;name&apos;: rejected value [aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef]; codes [forotallersd.User.name.size.error.forotallersd.User.name,forotallersd.User.name.size.error.name,forotallersd.User.name.size.error.java.lang.String,forotallersd.User.name.size.error,user.name.size.error.forotallersd.User.name,user.name.size.error.name,user.name.size.error.java.lang.String,user.name.size.error,forotallersd.User.name.size.toobig.forotallersd.User.name,forotallersd.User.name.size.toobig.name,forotallersd.User.name.size.toobig.java.lang.String,forotallersd.User.name.size.toobig,user.name.size.toobig.forotallersd.User.name,user.name.size.toobig.name,user.name.size.toobig.java.lang.String,user.name.size.toobig,size.toobig.forotallersd.User.name,size.toobig.name,size.toobig.java.lang.String,size.toobig]; arguments [name,class forotallersd.User,aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef,3,50]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid size range from [{3}] to [{4}]]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - name(UserSpec.groovy:27)
</failure>
  </testcase>
  <testcase classname="forotallersd.UserSpec" name="test user attribute name: , field: blank, valid: false " time="0.05">
    <failure message="Condition not satisfied:&#xa;&#xa;t_user_name.errors.hasFieldErrors(&quot;name&quot;) == false&#xa;|           |      |                      |&#xa;|           |      true                   false&#xa;|           org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|           Field error in object &apos;forotallersd.User&apos; on field &apos;name&apos;: rejected value [null]; codes [forotallersd.User.name.nullable.error.forotallersd.User.name,forotallersd.User.name.nullable.error.name,forotallersd.User.name.nullable.error.java.lang.String,forotallersd.User.name.nullable.error,user.name.nullable.error.forotallersd.User.name,user.name.nullable.error.name,user.name.nullable.error.java.lang.String,user.name.nullable.error,forotallersd.User.name.nullable.forotallersd.User.name,forotallersd.User.name.nullable.name,forotallersd.User.name.nullable.java.lang.String,forotallersd.User.name.nullable,user.name.nullable.forotallersd.User.name,user.name.nullable.name,user.name.nullable.java.lang.String,user.name.nullable,nullable.forotallersd.User.name,nullable.name,nullable.java.lang.String,nullable]; arguments [name,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_name.errors.hasFieldErrors(&quot;name&quot;) == false
|           |      |                      |
|           |      true                   false
|           org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|           Field error in object &apos;forotallersd.User&apos; on field &apos;name&apos;: rejected value [null]; codes [forotallersd.User.name.nullable.error.forotallersd.User.name,forotallersd.User.name.nullable.error.name,forotallersd.User.name.nullable.error.java.lang.String,forotallersd.User.name.nullable.error,user.name.nullable.error.forotallersd.User.name,user.name.nullable.error.name,user.name.nullable.error.java.lang.String,user.name.nullable.error,forotallersd.User.name.nullable.forotallersd.User.name,forotallersd.User.name.nullable.name,forotallersd.User.name.nullable.java.lang.String,forotallersd.User.name.nullable,user.name.nullable.forotallersd.User.name,user.name.nullable.name,user.name.nullable.java.lang.String,user.name.nullable,nullable.forotallersd.User.name,nullable.name,nullable.java.lang.String,nullable]; arguments [name,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - name(UserSpec.groovy:27)
</failure>
  </testcase>
  <testcase classname="forotallersd.UserSpec" name="test user attribute lastname: ab, field: minSize, valid: false " time="0.035">
    <failure message="Condition not satisfied:&#xa;&#xa;t_user_lastname.errors.hasFieldErrors(&quot;lastname&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;lastname&apos;: rejected value [ab]; codes [forotallersd.User.lastname.size.error.forotallersd.User.lastname,forotallersd.User.lastname.size.error.lastname,forotallersd.User.lastname.size.error.java.lang.String,forotallersd.User.lastname.size.error,user.lastname.size.error.forotallersd.User.lastname,user.lastname.size.error.lastname,user.lastname.size.error.java.lang.String,user.lastname.size.error,forotallersd.User.lastname.size.toosmall.forotallersd.User.lastname,forotallersd.User.lastname.size.toosmall.lastname,forotallersd.User.lastname.size.toosmall.java.lang.String,forotallersd.User.lastname.size.toosmall,user.lastname.size.toosmall.forotallersd.User.lastname,user.lastname.size.toosmall.lastname,user.lastname.size.toosmall.java.lang.String,user.lastname.size.toosmall,size.toosmall.forotallersd.User.lastname,size.toosmall.lastname,size.toosmall.java.lang.String,size.toosmall]; arguments [lastname,class forotallersd.User,ab,3,50]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid size range from [{3}] to [{4}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_lastname.errors.hasFieldErrors(&quot;lastname&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;lastname&apos;: rejected value [ab]; codes [forotallersd.User.lastname.size.error.forotallersd.User.lastname,forotallersd.User.lastname.size.error.lastname,forotallersd.User.lastname.size.error.java.lang.String,forotallersd.User.lastname.size.error,user.lastname.size.error.forotallersd.User.lastname,user.lastname.size.error.lastname,user.lastname.size.error.java.lang.String,user.lastname.size.error,forotallersd.User.lastname.size.toosmall.forotallersd.User.lastname,forotallersd.User.lastname.size.toosmall.lastname,forotallersd.User.lastname.size.toosmall.java.lang.String,forotallersd.User.lastname.size.toosmall,user.lastname.size.toosmall.forotallersd.User.lastname,user.lastname.size.toosmall.lastname,user.lastname.size.toosmall.java.lang.String,user.lastname.size.toosmall,size.toosmall.forotallersd.User.lastname,size.toosmall.lastname,size.toosmall.java.lang.String,size.toosmall]; arguments [lastname,class forotallersd.User,ab,3,50]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid size range from [{3}] to [{4}]]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - lastname(UserSpec.groovy:46)
</failure>
  </testcase>
  <testcase classname="forotallersd.UserSpec" name="test user attribute lastname: null, field: null, valid: false " time="0.057">
    <failure message="Condition not satisfied:&#xa;&#xa;t_user_lastname.errors.hasFieldErrors(&quot;lastname&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;lastname&apos;: rejected value [null]; codes [forotallersd.User.lastname.nullable.error.forotallersd.User.lastname,forotallersd.User.lastname.nullable.error.lastname,forotallersd.User.lastname.nullable.error.java.lang.String,forotallersd.User.lastname.nullable.error,user.lastname.nullable.error.forotallersd.User.lastname,user.lastname.nullable.error.lastname,user.lastname.nullable.error.java.lang.String,user.lastname.nullable.error,forotallersd.User.lastname.nullable.forotallersd.User.lastname,forotallersd.User.lastname.nullable.lastname,forotallersd.User.lastname.nullable.java.lang.String,forotallersd.User.lastname.nullable,user.lastname.nullable.forotallersd.User.lastname,user.lastname.nullable.lastname,user.lastname.nullable.java.lang.String,user.lastname.nullable,nullable.forotallersd.User.lastname,nullable.lastname,nullable.java.lang.String,nullable]; arguments [lastname,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_lastname.errors.hasFieldErrors(&quot;lastname&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;lastname&apos;: rejected value [null]; codes [forotallersd.User.lastname.nullable.error.forotallersd.User.lastname,forotallersd.User.lastname.nullable.error.lastname,forotallersd.User.lastname.nullable.error.java.lang.String,forotallersd.User.lastname.nullable.error,user.lastname.nullable.error.forotallersd.User.lastname,user.lastname.nullable.error.lastname,user.lastname.nullable.error.java.lang.String,user.lastname.nullable.error,forotallersd.User.lastname.nullable.forotallersd.User.lastname,forotallersd.User.lastname.nullable.lastname,forotallersd.User.lastname.nullable.java.lang.String,forotallersd.User.lastname.nullable,user.lastname.nullable.forotallersd.User.lastname,user.lastname.nullable.lastname,user.lastname.nullable.java.lang.String,user.lastname.nullable,nullable.forotallersd.User.lastname,nullable.lastname,nullable.java.lang.String,nullable]; arguments [lastname,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - lastname(UserSpec.groovy:46)
</failure>
  </testcase>
  <testcase classname="forotallersd.UserSpec" name="test user attribute lastname: abc, field: size, valid: true " time="0.022" />
  <testcase classname="forotallersd.UserSpec" name="test user attribute lastname: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeee, field: size, valid: true " time="0.023" />
  <testcase classname="forotallersd.UserSpec" name="test user attribute lastname: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef, field: maxSize, valid: false " time="0.027">
    <failure message="Condition not satisfied:&#xa;&#xa;t_user_lastname.errors.hasFieldErrors(&quot;lastname&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;lastname&apos;: rejected value [aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef]; codes [forotallersd.User.lastname.size.error.forotallersd.User.lastname,forotallersd.User.lastname.size.error.lastname,forotallersd.User.lastname.size.error.java.lang.String,forotallersd.User.lastname.size.error,user.lastname.size.error.forotallersd.User.lastname,user.lastname.size.error.lastname,user.lastname.size.error.java.lang.String,user.lastname.size.error,forotallersd.User.lastname.size.toobig.forotallersd.User.lastname,forotallersd.User.lastname.size.toobig.lastname,forotallersd.User.lastname.size.toobig.java.lang.String,forotallersd.User.lastname.size.toobig,user.lastname.size.toobig.forotallersd.User.lastname,user.lastname.size.toobig.lastname,user.lastname.size.toobig.java.lang.String,user.lastname.size.toobig,size.toobig.forotallersd.User.lastname,size.toobig.lastname,size.toobig.java.lang.String,size.toobig]; arguments [lastname,class forotallersd.User,aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef,3,50]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid size range from [{3}] to [{4}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_lastname.errors.hasFieldErrors(&quot;lastname&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;lastname&apos;: rejected value [aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef]; codes [forotallersd.User.lastname.size.error.forotallersd.User.lastname,forotallersd.User.lastname.size.error.lastname,forotallersd.User.lastname.size.error.java.lang.String,forotallersd.User.lastname.size.error,user.lastname.size.error.forotallersd.User.lastname,user.lastname.size.error.lastname,user.lastname.size.error.java.lang.String,user.lastname.size.error,forotallersd.User.lastname.size.toobig.forotallersd.User.lastname,forotallersd.User.lastname.size.toobig.lastname,forotallersd.User.lastname.size.toobig.java.lang.String,forotallersd.User.lastname.size.toobig,user.lastname.size.toobig.forotallersd.User.lastname,user.lastname.size.toobig.lastname,user.lastname.size.toobig.java.lang.String,user.lastname.size.toobig,size.toobig.forotallersd.User.lastname,size.toobig.lastname,size.toobig.java.lang.String,size.toobig]; arguments [lastname,class forotallersd.User,aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef,3,50]; default message [Property [{0}] of class [{1}] with value [{2}] does not fall within the valid size range from [{3}] to [{4}]]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - lastname(UserSpec.groovy:46)
</failure>
  </testcase>
  <testcase classname="forotallersd.UserSpec" name="test user attribute lastname: , field: blank, valid: false " time="0.026">
    <failure message="Condition not satisfied:&#xa;&#xa;t_user_lastname.errors.hasFieldErrors(&quot;lastname&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;lastname&apos;: rejected value [null]; codes [forotallersd.User.lastname.nullable.error.forotallersd.User.lastname,forotallersd.User.lastname.nullable.error.lastname,forotallersd.User.lastname.nullable.error.java.lang.String,forotallersd.User.lastname.nullable.error,user.lastname.nullable.error.forotallersd.User.lastname,user.lastname.nullable.error.lastname,user.lastname.nullable.error.java.lang.String,user.lastname.nullable.error,forotallersd.User.lastname.nullable.forotallersd.User.lastname,forotallersd.User.lastname.nullable.lastname,forotallersd.User.lastname.nullable.java.lang.String,forotallersd.User.lastname.nullable,user.lastname.nullable.forotallersd.User.lastname,user.lastname.nullable.lastname,user.lastname.nullable.java.lang.String,user.lastname.nullable,nullable.forotallersd.User.lastname,nullable.lastname,nullable.java.lang.String,nullable]; arguments [lastname,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_lastname.errors.hasFieldErrors(&quot;lastname&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;lastname&apos;: rejected value [null]; codes [forotallersd.User.lastname.nullable.error.forotallersd.User.lastname,forotallersd.User.lastname.nullable.error.lastname,forotallersd.User.lastname.nullable.error.java.lang.String,forotallersd.User.lastname.nullable.error,user.lastname.nullable.error.forotallersd.User.lastname,user.lastname.nullable.error.lastname,user.lastname.nullable.error.java.lang.String,user.lastname.nullable.error,forotallersd.User.lastname.nullable.forotallersd.User.lastname,forotallersd.User.lastname.nullable.lastname,forotallersd.User.lastname.nullable.java.lang.String,forotallersd.User.lastname.nullable,user.lastname.nullable.forotallersd.User.lastname,user.lastname.nullable.lastname,user.lastname.nullable.java.lang.String,user.lastname.nullable,nullable.forotallersd.User.lastname,nullable.lastname,nullable.java.lang.String,nullable]; arguments [lastname,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - lastname(UserSpec.groovy:46)
</failure>
  </testcase>
  <testcase classname="forotallersd.UserSpec" name="test user attribute age: 13, field: minAge, valid: false " time="0.027">
    <failure message="Condition not satisfied:&#xa;&#xa;t_user_age.errors.hasFieldErrors(&quot;age&quot;) == false&#xa;|          |      |                     |&#xa;|          |      true                  false&#xa;|          org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|          Field error in object &apos;forotallersd.User&apos; on field &apos;age&apos;: rejected value [13]; codes [forotallersd.User.age.min.error.forotallersd.User.age,forotallersd.User.age.min.error.age,forotallersd.User.age.min.error.java.lang.Integer,forotallersd.User.age.min.error,user.age.min.error.forotallersd.User.age,user.age.min.error.age,user.age.min.error.java.lang.Integer,user.age.min.error,forotallersd.User.age.min.notmet.forotallersd.User.age,forotallersd.User.age.min.notmet.age,forotallersd.User.age.min.notmet.java.lang.Integer,forotallersd.User.age.min.notmet,user.age.min.notmet.forotallersd.User.age,user.age.min.notmet.age,user.age.min.notmet.java.lang.Integer,user.age.min.notmet,min.notmet.forotallersd.User.age,min.notmet.age,min.notmet.java.lang.Integer,min.notmet]; arguments [age,class forotallersd.User,13,14]; default message [Property [{0}] of class [{1}] with value [{2}] is less than minimum value [{3}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_age.errors.hasFieldErrors(&quot;age&quot;) == false
|          |      |                     |
|          |      true                  false
|          org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|          Field error in object &apos;forotallersd.User&apos; on field &apos;age&apos;: rejected value [13]; codes [forotallersd.User.age.min.error.forotallersd.User.age,forotallersd.User.age.min.error.age,forotallersd.User.age.min.error.java.lang.Integer,forotallersd.User.age.min.error,user.age.min.error.forotallersd.User.age,user.age.min.error.age,user.age.min.error.java.lang.Integer,user.age.min.error,forotallersd.User.age.min.notmet.forotallersd.User.age,forotallersd.User.age.min.notmet.age,forotallersd.User.age.min.notmet.java.lang.Integer,forotallersd.User.age.min.notmet,user.age.min.notmet.forotallersd.User.age,user.age.min.notmet.age,user.age.min.notmet.java.lang.Integer,user.age.min.notmet,min.notmet.forotallersd.User.age,min.notmet.age,min.notmet.java.lang.Integer,min.notmet]; arguments [age,class forotallersd.User,13,14]; default message [Property [{0}] of class [{1}] with value [{2}] is less than minimum value [{3}]]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - age(UserSpec.groovy:65)
</failure>
  </testcase>
  <testcase classname="forotallersd.UserSpec" name="test user attribute age: 14, field: Age, valid: true " time="0.022" />
  <testcase classname="forotallersd.UserSpec" name="test user attribute username: , field: blank, valid: false " time="0.055">
    <failure message="Condition not satisfied:&#xa;&#xa;t_user_username.errors.hasFieldErrors(&quot;username&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;username&apos;: rejected value [null]; codes [forotallersd.User.username.nullable.error.forotallersd.User.username,forotallersd.User.username.nullable.error.username,forotallersd.User.username.nullable.error.java.lang.String,forotallersd.User.username.nullable.error,user.username.nullable.error.forotallersd.User.username,user.username.nullable.error.username,user.username.nullable.error.java.lang.String,user.username.nullable.error,forotallersd.User.username.nullable.forotallersd.User.username,forotallersd.User.username.nullable.username,forotallersd.User.username.nullable.java.lang.String,forotallersd.User.username.nullable,user.username.nullable.forotallersd.User.username,user.username.nullable.username,user.username.nullable.java.lang.String,user.username.nullable,nullable.forotallersd.User.username,nullable.username,nullable.java.lang.String,nullable]; arguments [username,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_username.errors.hasFieldErrors(&quot;username&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;username&apos;: rejected value [null]; codes [forotallersd.User.username.nullable.error.forotallersd.User.username,forotallersd.User.username.nullable.error.username,forotallersd.User.username.nullable.error.java.lang.String,forotallersd.User.username.nullable.error,user.username.nullable.error.forotallersd.User.username,user.username.nullable.error.username,user.username.nullable.error.java.lang.String,user.username.nullable.error,forotallersd.User.username.nullable.forotallersd.User.username,forotallersd.User.username.nullable.username,forotallersd.User.username.nullable.java.lang.String,forotallersd.User.username.nullable,user.username.nullable.forotallersd.User.username,user.username.nullable.username,user.username.nullable.java.lang.String,user.username.nullable,nullable.forotallersd.User.username,nullable.username,nullable.java.lang.String,nullable]; arguments [username,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - username(UserSpec.groovy:83)
</failure>
  </testcase>
  <testcase classname="forotallersd.UserSpec" name="test user attribute username: null, field: null, valid: false " time="0.028">
    <failure message="Condition not satisfied:&#xa;&#xa;t_user_username.errors.hasFieldErrors(&quot;username&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;username&apos;: rejected value [null]; codes [forotallersd.User.username.nullable.error.forotallersd.User.username,forotallersd.User.username.nullable.error.username,forotallersd.User.username.nullable.error.java.lang.String,forotallersd.User.username.nullable.error,user.username.nullable.error.forotallersd.User.username,user.username.nullable.error.username,user.username.nullable.error.java.lang.String,user.username.nullable.error,forotallersd.User.username.nullable.forotallersd.User.username,forotallersd.User.username.nullable.username,forotallersd.User.username.nullable.java.lang.String,forotallersd.User.username.nullable,user.username.nullable.forotallersd.User.username,user.username.nullable.username,user.username.nullable.java.lang.String,user.username.nullable,nullable.forotallersd.User.username,nullable.username,nullable.java.lang.String,nullable]; arguments [username,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_username.errors.hasFieldErrors(&quot;username&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;username&apos;: rejected value [null]; codes [forotallersd.User.username.nullable.error.forotallersd.User.username,forotallersd.User.username.nullable.error.username,forotallersd.User.username.nullable.error.java.lang.String,forotallersd.User.username.nullable.error,user.username.nullable.error.forotallersd.User.username,user.username.nullable.error.username,user.username.nullable.error.java.lang.String,user.username.nullable.error,forotallersd.User.username.nullable.forotallersd.User.username,forotallersd.User.username.nullable.username,forotallersd.User.username.nullable.java.lang.String,forotallersd.User.username.nullable,user.username.nullable.forotallersd.User.username,user.username.nullable.username,user.username.nullable.java.lang.String,user.username.nullable,nullable.forotallersd.User.username,nullable.username,nullable.java.lang.String,nullable]; arguments [username,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - username(UserSpec.groovy:83)
</failure>
  </testcase>
  <testcase classname="forotallersd.UserSpec" name="test user attribute username: pablo, field: unique, valid: false " time="0.03">
    <failure message="Condition not satisfied:&#xa;&#xa;t_user_username.errors.hasFieldErrors(&quot;username&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;username&apos;: rejected value [pablo]; codes [unique.forotallersd.User.username,unique.username,unique.java.lang.String,unique]; arguments []; default message [null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_username.errors.hasFieldErrors(&quot;username&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;username&apos;: rejected value [pablo]; codes [unique.forotallersd.User.username,unique.username,unique.java.lang.String,unique]; arguments []; default message [null]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - username(UserSpec.groovy:83)
</failure>
  </testcase>
  <testcase classname="forotallersd.UserSpec" name="test user attribute username: pedro, field: username, valid: true " time="0.024" />
  <testcase classname="forotallersd.UserSpec" name="test user attribute password: , field: blank, valid: false " time="0.024">
    <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [null]; codes [forotallersd.User.password.nullable.error.forotallersd.User.password,forotallersd.User.password.nullable.error.password,forotallersd.User.password.nullable.error.java.lang.String,forotallersd.User.password.nullable.error,user.password.nullable.error.forotallersd.User.password,user.password.nullable.error.password,user.password.nullable.error.java.lang.String,user.password.nullable.error,forotallersd.User.password.nullable.forotallersd.User.password,forotallersd.User.password.nullable.password,forotallersd.User.password.nullable.java.lang.String,forotallersd.User.password.nullable,user.password.nullable.forotallersd.User.password,user.password.nullable.password,user.password.nullable.java.lang.String,user.password.nullable,nullable.forotallersd.User.password,nullable.password,nullable.java.lang.String,nullable]; arguments [password,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [null]; codes [forotallersd.User.password.nullable.error.forotallersd.User.password,forotallersd.User.password.nullable.error.password,forotallersd.User.password.nullable.error.java.lang.String,forotallersd.User.password.nullable.error,user.password.nullable.error.forotallersd.User.password,user.password.nullable.error.password,user.password.nullable.error.java.lang.String,user.password.nullable.error,forotallersd.User.password.nullable.forotallersd.User.password,forotallersd.User.password.nullable.password,forotallersd.User.password.nullable.java.lang.String,forotallersd.User.password.nullable,user.password.nullable.forotallersd.User.password,user.password.nullable.password,user.password.nullable.java.lang.String,user.password.nullable,nullable.forotallersd.User.password,nullable.password,nullable.java.lang.String,nullable]; arguments [password,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>
  </testcase>
  <testcase classname="forotallersd.UserSpec" name="test user attribute password: null, field: null, valid: false " time="0.024">
    <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [null]; codes [forotallersd.User.password.nullable.error.forotallersd.User.password,forotallersd.User.password.nullable.error.password,forotallersd.User.password.nullable.error.java.lang.String,forotallersd.User.password.nullable.error,user.password.nullable.error.forotallersd.User.password,user.password.nullable.error.password,user.password.nullable.error.java.lang.String,user.password.nullable.error,forotallersd.User.password.nullable.forotallersd.User.password,forotallersd.User.password.nullable.password,forotallersd.User.password.nullable.java.lang.String,forotallersd.User.password.nullable,user.password.nullable.forotallersd.User.password,user.password.nullable.password,user.password.nullable.java.lang.String,user.password.nullable,nullable.forotallersd.User.password,nullable.password,nullable.java.lang.String,nullable]; arguments [password,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [null]; codes [forotallersd.User.password.nullable.error.forotallersd.User.password,forotallersd.User.password.nullable.error.password,forotallersd.User.password.nullable.error.java.lang.String,forotallersd.User.password.nullable.error,user.password.nullable.error.forotallersd.User.password,user.password.nullable.error.password,user.password.nullable.error.java.lang.String,user.password.nullable.error,forotallersd.User.password.nullable.forotallersd.User.password,forotallersd.User.password.nullable.password,forotallersd.User.password.nullable.java.lang.String,forotallersd.User.password.nullable,user.password.nullable.forotallersd.User.password,user.password.nullable.password,user.password.nullable.java.lang.String,user.password.nullable,nullable.forotallersd.User.password,nullable.password,nullable.java.lang.String,nullable]; arguments [password,class forotallersd.User]; default message [Property [{0}] of class [{1}] cannot be null]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>
  </testcase>
  <testcase classname="forotallersd.UserSpec" name="test user attribute password: aaaaaA1, field: minSize, valid: false " time="0.024">
    <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [aaaaaA1]; codes [forotallersd.User.password.minSize.error.forotallersd.User.password,forotallersd.User.password.minSize.error.password,forotallersd.User.password.minSize.error.java.lang.String,forotallersd.User.password.minSize.error,user.password.minSize.error.forotallersd.User.password,user.password.minSize.error.password,user.password.minSize.error.java.lang.String,user.password.minSize.error,forotallersd.User.password.minSize.notmet.forotallersd.User.password,forotallersd.User.password.minSize.notmet.password,forotallersd.User.password.minSize.notmet.java.lang.String,forotallersd.User.password.minSize.notmet,user.password.minSize.notmet.forotallersd.User.password,user.password.minSize.notmet.password,user.password.minSize.notmet.java.lang.String,user.password.minSize.notmet,minSize.notmet.forotallersd.User.password,minSize.notmet.password,minSize.notmet.java.lang.String,minSize.notmet]; arguments [password,class forotallersd.User,aaaaaA1,8]; default message [Property [{0}] of class [{1}] with value [{2}] is less than the minimum size of [{3}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [aaaaaA1]; codes [forotallersd.User.password.minSize.error.forotallersd.User.password,forotallersd.User.password.minSize.error.password,forotallersd.User.password.minSize.error.java.lang.String,forotallersd.User.password.minSize.error,user.password.minSize.error.forotallersd.User.password,user.password.minSize.error.password,user.password.minSize.error.java.lang.String,user.password.minSize.error,forotallersd.User.password.minSize.notmet.forotallersd.User.password,forotallersd.User.password.minSize.notmet.password,forotallersd.User.password.minSize.notmet.java.lang.String,forotallersd.User.password.minSize.notmet,user.password.minSize.notmet.forotallersd.User.password,user.password.minSize.notmet.password,user.password.minSize.notmet.java.lang.String,user.password.minSize.notmet,minSize.notmet.forotallersd.User.password,minSize.notmet.password,minSize.notmet.java.lang.String,minSize.notmet]; arguments [password,class forotallersd.User,aaaaaA1,8]; default message [Property [{0}] of class [{1}] with value [{2}] is less than the minimum size of [{3}]]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>
  </testcase>
  <testcase classname="forotallersd.UserSpec" name="test user attribute password: aaaaaaaaa, field: notCorrect, valid: false " time="0.025">
    <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [aaaaaaaaa]; codes [forotallersd.User.password.matches.error.forotallersd.User.password,forotallersd.User.password.matches.error.password,forotallersd.User.password.matches.error.java.lang.String,forotallersd.User.password.matches.error,user.password.matches.error.forotallersd.User.password,user.password.matches.error.password,user.password.matches.error.java.lang.String,user.password.matches.error,forotallersd.User.password.matches.invalid.forotallersd.User.password,forotallersd.User.password.matches.invalid.password,forotallersd.User.password.matches.invalid.java.lang.String,forotallersd.User.password.matches.invalid,user.password.matches.invalid.forotallersd.User.password,user.password.matches.invalid.password,user.password.matches.invalid.java.lang.String,user.password.matches.invalid,matches.invalid.forotallersd.User.password,matches.invalid.password,matches.invalid.java.lang.String,matches.invalid]; arguments [password,class forotallersd.User,aaaaaaaaa,^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$]; default message [Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [aaaaaaaaa]; codes [forotallersd.User.password.matches.error.forotallersd.User.password,forotallersd.User.password.matches.error.password,forotallersd.User.password.matches.error.java.lang.String,forotallersd.User.password.matches.error,user.password.matches.error.forotallersd.User.password,user.password.matches.error.password,user.password.matches.error.java.lang.String,user.password.matches.error,forotallersd.User.password.matches.invalid.forotallersd.User.password,forotallersd.User.password.matches.invalid.password,forotallersd.User.password.matches.invalid.java.lang.String,forotallersd.User.password.matches.invalid,user.password.matches.invalid.forotallersd.User.password,user.password.matches.invalid.password,user.password.matches.invalid.java.lang.String,user.password.matches.invalid,matches.invalid.forotallersd.User.password,matches.invalid.password,matches.invalid.java.lang.String,matches.invalid]; arguments [password,class forotallersd.User,aaaaaaaaa,^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$]; default message [Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>
  </testcase>
  <testcase classname="forotallersd.UserSpec" name="test user attribute password: aaaaaaaaa1, field: notCorrect, valid: false " time="0.024">
    <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [aaaaaaaaa1]; codes [forotallersd.User.password.matches.error.forotallersd.User.password,forotallersd.User.password.matches.error.password,forotallersd.User.password.matches.error.java.lang.String,forotallersd.User.password.matches.error,user.password.matches.error.forotallersd.User.password,user.password.matches.error.password,user.password.matches.error.java.lang.String,user.password.matches.error,forotallersd.User.password.matches.invalid.forotallersd.User.password,forotallersd.User.password.matches.invalid.password,forotallersd.User.password.matches.invalid.java.lang.String,forotallersd.User.password.matches.invalid,user.password.matches.invalid.forotallersd.User.password,user.password.matches.invalid.password,user.password.matches.invalid.java.lang.String,user.password.matches.invalid,matches.invalid.forotallersd.User.password,matches.invalid.password,matches.invalid.java.lang.String,matches.invalid]; arguments [password,class forotallersd.User,aaaaaaaaa1,^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$]; default message [Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [aaaaaaaaa1]; codes [forotallersd.User.password.matches.error.forotallersd.User.password,forotallersd.User.password.matches.error.password,forotallersd.User.password.matches.error.java.lang.String,forotallersd.User.password.matches.error,user.password.matches.error.forotallersd.User.password,user.password.matches.error.password,user.password.matches.error.java.lang.String,user.password.matches.error,forotallersd.User.password.matches.invalid.forotallersd.User.password,forotallersd.User.password.matches.invalid.password,forotallersd.User.password.matches.invalid.java.lang.String,forotallersd.User.password.matches.invalid,user.password.matches.invalid.forotallersd.User.password,user.password.matches.invalid.password,user.password.matches.invalid.java.lang.String,user.password.matches.invalid,matches.invalid.forotallersd.User.password,matches.invalid.password,matches.invalid.java.lang.String,matches.invalid]; arguments [password,class forotallersd.User,aaaaaaaaa1,^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$]; default message [Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>
  </testcase>
  <testcase classname="forotallersd.UserSpec" name="test user attribute password: 1111111111, field: notCorrect, valid: false " time="0.025">
    <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [1111111111]; codes [forotallersd.User.password.matches.error.forotallersd.User.password,forotallersd.User.password.matches.error.password,forotallersd.User.password.matches.error.java.lang.String,forotallersd.User.password.matches.error,user.password.matches.error.forotallersd.User.password,user.password.matches.error.password,user.password.matches.error.java.lang.String,user.password.matches.error,forotallersd.User.password.matches.invalid.forotallersd.User.password,forotallersd.User.password.matches.invalid.password,forotallersd.User.password.matches.invalid.java.lang.String,forotallersd.User.password.matches.invalid,user.password.matches.invalid.forotallersd.User.password,user.password.matches.invalid.password,user.password.matches.invalid.java.lang.String,user.password.matches.invalid,matches.invalid.forotallersd.User.password,matches.invalid.password,matches.invalid.java.lang.String,matches.invalid]; arguments [password,class forotallersd.User,1111111111,^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$]; default message [Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [1111111111]; codes [forotallersd.User.password.matches.error.forotallersd.User.password,forotallersd.User.password.matches.error.password,forotallersd.User.password.matches.error.java.lang.String,forotallersd.User.password.matches.error,user.password.matches.error.forotallersd.User.password,user.password.matches.error.password,user.password.matches.error.java.lang.String,user.password.matches.error,forotallersd.User.password.matches.invalid.forotallersd.User.password,forotallersd.User.password.matches.invalid.password,forotallersd.User.password.matches.invalid.java.lang.String,forotallersd.User.password.matches.invalid,user.password.matches.invalid.forotallersd.User.password,user.password.matches.invalid.password,user.password.matches.invalid.java.lang.String,user.password.matches.invalid,matches.invalid.forotallersd.User.password,matches.invalid.password,matches.invalid.java.lang.String,matches.invalid]; arguments [password,class forotallersd.User,1111111111,^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$]; default message [Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>
  </testcase>
  <testcase classname="forotallersd.UserSpec" name="test user attribute password: 111111111A, field: notCorrect, valid: false " time="0.024">
    <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [111111111A]; codes [forotallersd.User.password.matches.error.forotallersd.User.password,forotallersd.User.password.matches.error.password,forotallersd.User.password.matches.error.java.lang.String,forotallersd.User.password.matches.error,user.password.matches.error.forotallersd.User.password,user.password.matches.error.password,user.password.matches.error.java.lang.String,user.password.matches.error,forotallersd.User.password.matches.invalid.forotallersd.User.password,forotallersd.User.password.matches.invalid.password,forotallersd.User.password.matches.invalid.java.lang.String,forotallersd.User.password.matches.invalid,user.password.matches.invalid.forotallersd.User.password,user.password.matches.invalid.password,user.password.matches.invalid.java.lang.String,user.password.matches.invalid,matches.invalid.forotallersd.User.password,matches.invalid.password,matches.invalid.java.lang.String,matches.invalid]; arguments [password,class forotallersd.User,111111111A,^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$]; default message [Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [111111111A]; codes [forotallersd.User.password.matches.error.forotallersd.User.password,forotallersd.User.password.matches.error.password,forotallersd.User.password.matches.error.java.lang.String,forotallersd.User.password.matches.error,user.password.matches.error.forotallersd.User.password,user.password.matches.error.password,user.password.matches.error.java.lang.String,user.password.matches.error,forotallersd.User.password.matches.invalid.forotallersd.User.password,forotallersd.User.password.matches.invalid.password,forotallersd.User.password.matches.invalid.java.lang.String,forotallersd.User.password.matches.invalid,user.password.matches.invalid.forotallersd.User.password,user.password.matches.invalid.password,user.password.matches.invalid.java.lang.String,user.password.matches.invalid,matches.invalid.forotallersd.User.password,matches.invalid.password,matches.invalid.java.lang.String,matches.invalid]; arguments [password,class forotallersd.User,111111111A,^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$]; default message [Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>
  </testcase>
  <testcase classname="forotallersd.UserSpec" name="test user attribute password: AAAAAAAAAa, field: notCorrect, valid: false " time="0.025">
    <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [AAAAAAAAAa]; codes [forotallersd.User.password.matches.error.forotallersd.User.password,forotallersd.User.password.matches.error.password,forotallersd.User.password.matches.error.java.lang.String,forotallersd.User.password.matches.error,user.password.matches.error.forotallersd.User.password,user.password.matches.error.password,user.password.matches.error.java.lang.String,user.password.matches.error,forotallersd.User.password.matches.invalid.forotallersd.User.password,forotallersd.User.password.matches.invalid.password,forotallersd.User.password.matches.invalid.java.lang.String,forotallersd.User.password.matches.invalid,user.password.matches.invalid.forotallersd.User.password,user.password.matches.invalid.password,user.password.matches.invalid.java.lang.String,user.password.matches.invalid,matches.invalid.forotallersd.User.password,matches.invalid.password,matches.invalid.java.lang.String,matches.invalid]; arguments [password,class forotallersd.User,AAAAAAAAAa,^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$]; default message [Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [AAAAAAAAAa]; codes [forotallersd.User.password.matches.error.forotallersd.User.password,forotallersd.User.password.matches.error.password,forotallersd.User.password.matches.error.java.lang.String,forotallersd.User.password.matches.error,user.password.matches.error.forotallersd.User.password,user.password.matches.error.password,user.password.matches.error.java.lang.String,user.password.matches.error,forotallersd.User.password.matches.invalid.forotallersd.User.password,forotallersd.User.password.matches.invalid.password,forotallersd.User.password.matches.invalid.java.lang.String,forotallersd.User.password.matches.invalid,user.password.matches.invalid.forotallersd.User.password,user.password.matches.invalid.password,user.password.matches.invalid.java.lang.String,user.password.matches.invalid,matches.invalid.forotallersd.User.password,matches.invalid.password,matches.invalid.java.lang.String,matches.invalid]; arguments [password,class forotallersd.User,AAAAAAAAAa,^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$]; default message [Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>
  </testcase>
  <testcase classname="forotallersd.UserSpec" name="test user attribute password: 11111a1111, field: notCorrect, valid: false " time="0.028">
    <failure message="Condition not satisfied:&#xa;&#xa;t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false&#xa;|               |      |                          |&#xa;|               |      true                       false&#xa;|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors&#xa;|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [11111a1111]; codes [forotallersd.User.password.matches.error.forotallersd.User.password,forotallersd.User.password.matches.error.password,forotallersd.User.password.matches.error.java.lang.String,forotallersd.User.password.matches.error,user.password.matches.error.forotallersd.User.password,user.password.matches.error.password,user.password.matches.error.java.lang.String,user.password.matches.error,forotallersd.User.password.matches.invalid.forotallersd.User.password,forotallersd.User.password.matches.invalid.password,forotallersd.User.password.matches.invalid.java.lang.String,forotallersd.User.password.matches.invalid,user.password.matches.invalid.forotallersd.User.password,user.password.matches.invalid.password,user.password.matches.invalid.java.lang.String,user.password.matches.invalid,matches.invalid.forotallersd.User.password,matches.invalid.password,matches.invalid.java.lang.String,matches.invalid]; arguments [password,class forotallersd.User,11111a1111,^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$]; default message [Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]]&#xa;forotallersd.User : (unsaved)&#xa;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: Condition not satisfied:

t_user_password.errors.hasFieldErrors(&quot;password&quot;) == false
|               |      |                          |
|               |      true                       false
|               org.codehaus.groovy.grails.plugins.testing.GrailsMockErrors: 1 errors
|               Field error in object &apos;forotallersd.User&apos; on field &apos;password&apos;: rejected value [11111a1111]; codes [forotallersd.User.password.matches.error.forotallersd.User.password,forotallersd.User.password.matches.error.password,forotallersd.User.password.matches.error.java.lang.String,forotallersd.User.password.matches.error,user.password.matches.error.forotallersd.User.password,user.password.matches.error.password,user.password.matches.error.java.lang.String,user.password.matches.error,forotallersd.User.password.matches.invalid.forotallersd.User.password,forotallersd.User.password.matches.invalid.password,forotallersd.User.password.matches.invalid.java.lang.String,forotallersd.User.password.matches.invalid,user.password.matches.invalid.forotallersd.User.password,user.password.matches.invalid.password,user.password.matches.invalid.java.lang.String,user.password.matches.invalid,matches.invalid.forotallersd.User.password,matches.invalid.password,matches.invalid.java.lang.String,matches.invalid]; arguments [password,class forotallersd.User,11111a1111,^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$]; default message [Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]]
forotallersd.User : (unsaved)

	at forotallersd.UserSpec.Testing Domain Class User - password(UserSpec.groovy:100)
</failure>
  </testcase>
  <testcase classname="forotallersd.UserSpec" name="test user attribute password: Prueba2015, field: CorrectPassword, valid: true " time="0.02" />
  <testcase classname="forotallersd.UserSpec" name="test user attribute password: comoPuede5, field: CorrectPassword, valid: true " time="0.022" />
  <system-out><![CDATA[--Output from test user attribute name: ab, field: minSize, valid: false --
--Output from test user attribute name: null, field: null, valid: false --
--Output from test user attribute name: abc, field: size, valid: true --
--Output from test user attribute name: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeee, field: size, valid: true --
--Output from test user attribute name: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef, field: maxSize, valid: false --
--Output from test user attribute name: , field: blank, valid: false --
--Output from test user attribute lastname: ab, field: minSize, valid: false --
--Output from test user attribute lastname: null, field: null, valid: false --
--Output from test user attribute lastname: abc, field: size, valid: true --
--Output from test user attribute lastname: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeee, field: size, valid: true --
--Output from test user attribute lastname: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef, field: maxSize, valid: false --
--Output from test user attribute lastname: , field: blank, valid: false --
--Output from test user attribute age: 13, field: minAge, valid: false --
--Output from test user attribute age: 14, field: Age, valid: true --
--Output from test user attribute username: , field: blank, valid: false --
--Output from test user attribute username: null, field: null, valid: false --
--Output from test user attribute username: pablo, field: unique, valid: false --
--Output from test user attribute username: pedro, field: username, valid: true --
--Output from test user attribute password: , field: blank, valid: false --
--Output from test user attribute password: null, field: null, valid: false --
--Output from test user attribute password: aaaaaA1, field: minSize, valid: false --
--Output from test user attribute password: aaaaaaaaa, field: notCorrect, valid: false --
--Output from test user attribute password: aaaaaaaaa1, field: notCorrect, valid: false --
--Output from test user attribute password: 1111111111, field: notCorrect, valid: false --
--Output from test user attribute password: 111111111A, field: notCorrect, valid: false --
--Output from test user attribute password: AAAAAAAAAa, field: notCorrect, valid: false --
--Output from test user attribute password: 11111a1111, field: notCorrect, valid: false --
--Output from test user attribute password: Prueba2015, field: CorrectPassword, valid: true --
--Output from test user attribute password: comoPuede5, field: CorrectPassword, valid: true --
]]></system-out>
  <system-err><![CDATA[--Output from test user attribute name: ab, field: minSize, valid: false --
--Output from test user attribute name: null, field: null, valid: false --
--Output from test user attribute name: abc, field: size, valid: true --
--Output from test user attribute name: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeee, field: size, valid: true --
--Output from test user attribute name: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef, field: maxSize, valid: false --
--Output from test user attribute name: , field: blank, valid: false --
--Output from test user attribute lastname: ab, field: minSize, valid: false --
--Output from test user attribute lastname: null, field: null, valid: false --
--Output from test user attribute lastname: abc, field: size, valid: true --
--Output from test user attribute lastname: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeee, field: size, valid: true --
--Output from test user attribute lastname: aaaaaaaaaabbbbbbbbbbccccccccccddddddddddeeeeeeeeeef, field: maxSize, valid: false --
--Output from test user attribute lastname: , field: blank, valid: false --
--Output from test user attribute age: 13, field: minAge, valid: false --
--Output from test user attribute age: 14, field: Age, valid: true --
--Output from test user attribute username: , field: blank, valid: false --
--Output from test user attribute username: null, field: null, valid: false --
--Output from test user attribute username: pablo, field: unique, valid: false --
--Output from test user attribute username: pedro, field: username, valid: true --
--Output from test user attribute password: , field: blank, valid: false --
--Output from test user attribute password: null, field: null, valid: false --
--Output from test user attribute password: aaaaaA1, field: minSize, valid: false --
--Output from test user attribute password: aaaaaaaaa, field: notCorrect, valid: false --
--Output from test user attribute password: aaaaaaaaa1, field: notCorrect, valid: false --
--Output from test user attribute password: 1111111111, field: notCorrect, valid: false --
--Output from test user attribute password: 111111111A, field: notCorrect, valid: false --
--Output from test user attribute password: AAAAAAAAAa, field: notCorrect, valid: false --
--Output from test user attribute password: 11111a1111, field: notCorrect, valid: false --
--Output from test user attribute password: Prueba2015, field: CorrectPassword, valid: true --
--Output from test user attribute password: comoPuede5, field: CorrectPassword, valid: true --
]]></system-err>
</testsuite>
